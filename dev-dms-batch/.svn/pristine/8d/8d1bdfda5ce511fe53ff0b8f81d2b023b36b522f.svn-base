package dms.nr;

import java.util.HashMap;
import java.util.Map;

import nexcore.framework.bat.IBatchContext;

import org.apache.commons.logging.Log;

import nexcore.framework.bat.base.AbsBatchComponent;
import nexcore.framework.bat.base.AbsRecordHandler;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.exception.BizRuntimeException;
import nexcore.framework.core.util.DateUtils;

/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>서브 업무명 : BNR005</li>
 * <li>설  명 : </li>
 * <li>작성일 : 2015-08-05 09:42:37</li>
 * <li>작성자 : 박홍서 (uni9401)</li>
 * </ul>
 */
public class DBT001 extends AbsBatchComponent {
    private Log log;
    
    private int processCnt = 0;
    private String taskNo = "";
    
    /**
     * 배치 생성자. 
     * 상위클래스 생성자 호출
     */
    public DBT001() {
        super();
    }

    /**
     * 배치 전처리 메소드. 
     * 여기서 Exception 발생시 execute() 메소드는 실행되지 않고, afterExecute() 는 실행됨
     */
    public void beforeExecute(IBatchContext context) {
		log = getLog(context);

        processCnt = 0;
        taskNo = "";
        
        IOnlineContext    onlineCtx  = makeOnlineContext(context);
        IDataSet reqDS = new DataSet();
        IDataSet resDS = callOnlineBizComponent("sc.SCSBase", "fInqTaskNoSeq", reqDS, onlineCtx);
        taskNo = resDS.getField("TASK_NO");
        
        reqDS.putField("TASK_DT", DateUtils.getCurrentDate());
        reqDS.putField("TASK_ID", context.getInParameter("TASK_ID"));
        reqDS.putField("TASK_NO", taskNo);
        reqDS.putField("TASK_NM", context.getInParameter("TASK_NM"));
        reqDS.putField("GRP_ID", "NR");
        reqDS.putField("INST_CD", "DMS");
        reqDS.putField("BAT_TASK_OP_ST_CD", "B");
        reqDS.putField("OP_CNT", "0");
        reqDS.putField("FS_REG_USER_ID", "BAT");
        reqDS.putField("LS_CHG_USER_ID", "BAT");
        
        //callOnlineBizComponent("sc.SCSBase", "fRegBatTaskOpHst", reqDS, onlineCtx);

        log = getLog(context);
        if(log.isDebugEnabled()) {
            log.debug("공유컴포넌트 호출 결과:");
            log.debug(resDS);
        }
    }

    /**
     * 배치 메인 메소드
     */
    public void execute(final IBatchContext context) {
        // 트랜잭션 시작
        txBegin();  
        dbStartSession();
        dbBeginBatch();
        
        try {
            Map paramMap = new HashMap();
            
            //1.작업 총건수 세팅
            IRecord rec   = dbSelectSingle("SSKNInfoTotCnt", null, context);
            processCnt = rec.getInt("TOT_CNT");
            
            if(processCnt > 0) {
                //2.입력수정작업
                paramMap.put("OPER_ID", context.getInParameter("OPER_ID"));
                dbInsert("ISKNInfo", paramMap, context); //SKN 여신등록
                
                //3.삭제작업
                //dbSelect("SSKNInfoDelete", null, makeRecordHandlerDelete(context), context);
                
                //4.작업상태업데이트
                dbUpdate("USKNInfo", null, context);
            }
        } catch (Exception e) {
            throw new BizRuntimeException("XYZE0000", new String[]{"SKN여신 인터페이스"}, e);
        }
        
        // 트랜잭션 커밋
        dbEndBatch();
        dbEndSession();
        txCommit();
    }
    
    /**
     * 배치 후처리 메소드. 
     * beforeExecute(), execute() 의 Exception 발생 여부와 관계없이 이 메소드는 실행됨
     */
    public void afterExecute(IBatchContext context) {
        IOnlineContext    onlineCtx  = makeOnlineContext(context);
        IDataSet reqDS = new DataSet();
        reqDS.putField("TASK_NO", taskNo);
        reqDS.putField("OP_CNT", ""+processCnt);
        reqDS.putField("OP_FILE_NM", "");
        reqDS.putField("LS_CHG_USER_ID", "BAT");
        
        if (super.exceptionInExecute == null) {
            // execute() 정상인 경우
            reqDS.putField("BAT_TASK_OP_ST_CD", "S");
        }else {
            // execute() 에서 에러 발생할 경우
            reqDS.putField("BAT_TASK_OP_ST_CD", "F");
        }
        IDataSet resDS = callOnlineBizComponent("sc.SCSBase", "dUBatTaskOpHst", reqDS, onlineCtx);

        Log log = getLog(context);
        if(log.isDebugEnabled()) {
            log.debug("공유컴포넌트 호출 결과:");
            log.debug(resDS);
        }
    }
    
    /**
     * 단말기모델IF조회 후 레코드 단위로 단말기모델IF PROC_ST_CD 업데이트
     * 
     */
//    public AbsRecordHandler makeRecordHandlerDelete(IBatchContext context) {
//        AbsRecordHandler rh = new AbsRecordHandler(context) {
//            
//            @Override
//            public void handleRecord(IRecord row) {
//                try {
//                    dbDelete("DSKNInfo", row, context);
//                } catch (Exception e) {
//                    throw new BizRuntimeException("XYZE0000", new String[]{"SKN여신 인터페이스"}, e);
//                }
//            }
//        };
//        return rh;
//    }

}
