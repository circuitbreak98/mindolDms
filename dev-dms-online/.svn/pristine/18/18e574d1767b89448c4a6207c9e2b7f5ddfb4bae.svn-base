package dms.pr.prbxmbase.biz;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.logging.Log;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;




/**
 * <ul>
 * <li>업무 그룹명 : dms/임대R</li>
 * <li>단위업무명: [PU]매출정산등록</li>
 * <li>설  명 : <pre>[PU]매출정산등록</pre></li>
 * <li>작성일 : 2015-08-07 16:30:31</li>
 * <li>작성자 : 김상오 (myneti99)</li>
 * </ul>
 *
 * @author 김상오 (myneti99)
 */
public class PPRSaleXclRgst extends fwk.base.ProcessUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public PPRSaleXclRgst(){
		super();
	}

	/**
	 *
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-07 16:30:31
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet pInqSaleXclList(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    // 1. FU lookup
	    FPRPRSaleXclRgst fPRPRSaleXclRgst = (FPRPRSaleXclRgst) lookupFunctionUnit(FPRPRSaleXclRgst.class);
        // 2. FM 호출
        responseData.putRecordSet("RS_SALE_XCL_LIST",fPRPRSaleXclRgst.fInqSaleXclList(requestData, onlineCtx).getRecordSet("RS_SALE_XCL_LIST"));
        // 3. 결과값 리턴
        responseData.setOkResultMessage("DMS00001", null); //정상 조회되었습니다.
	
	    return responseData;
	}

	/**
	 *
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-07 16:30:31
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet pInqSaleXclExcelList(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    // 1. FU lookup
	    FPRPRSaleXclRgst fPRPRSaleXclRgst = (FPRPRSaleXclRgst) lookupFunctionUnit(FPRPRSaleXclRgst.class);
        // 2. FM 호출
        responseData.putRecordSet("RS_SALE_XCL_LIST",fPRPRSaleXclRgst.fInqSaleXclList(requestData, onlineCtx).getRecordSet("RS_SALE_XCL_LIST"));
        // 3. 결과값 리턴
        responseData.setOkResultMessage("DMS00001", null); //정상 조회되었습니다.
	
	    return responseData;
	}

	/**
	 * <pre>매출정산생성</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-07 16:30:31
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : IN_DT [입력년월]
	 *	- field : XCL_GUBUN [정산구분]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet pSaveSaleXcl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    Log log =  getLog(onlineCtx);
	  
		log.debug("\n\n\n\n  >>>>>>>>>>>>>>>>> 배치실행 테스트");
	    // 배치 호출을 위한 파라미터 설정
	    Map inParam = new HashMap();
	    inParam = requestData.getFieldMap();
//	    inParam.put("COMPONENTNAME_LOCAL_ONLY", "dms.pr.BPR009");
	    inParam.put("COMPONENTNAME_LOCAL_ONLY", "dms.inf.BIF001");
	    
	    // 배치 호출. 리턴값은 Job Execution Id. 
	    String jobExeId = callBatchJob("INRUK0001", inParam, onlineCtx);
	    
	    
	    
	    return responseData;
	}
  
}
