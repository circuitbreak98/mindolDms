package dms.ep.epscsbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.HpcUtils;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [FU]재감정재고관리</li>
 * <li>설  명 : <pre>[FU]재감정재고관리</pre></li>
 * <li>작성일 : 2015-08-19 13:30:36</li>
 * <li>작성자 : 김윤환 (kyh0904)</li>
 * </ul>
 *
 * @author 김윤환 (kyh0904)
 */
public class FEPRJdgInveMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FEPRJdgInveMgmt(){
		super();
	}

	/**
	 * <pre>[FM]재감정현황조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-08-19 13:30:36
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DT_GB [일자구분]
	 *	- field : FROM_DT [시작일자]
	 *	- field : TO_DT [종료일자]
	 *	- field : AFFIL_AGN_NM [대리점명]
	 *	- field : AFFIL_AGN_CD [대리점코드]
	 *	- field : CNSL_DEALCO_NM [상담처코드]
	 *	- field : CNSL_DEALCO_CD [상담처명]
	 *	- field : EQP_MDL_NM [단말기 모델코드]
	 *	- field : EQP_MDL_CD [단말기 모델명]
	 *	- field : EQP_SER_NO [단말기 일련번호]
	 *	- field : DPSTR [고객명]
	 *	- field : CNSL_MGMT_NO [상담관리번호]
	 *	- field : SRH_GB [찾기구분]
	 *	- field : PRE_DC_CL [선할인여부]
	 *	- field : SCRB_MTHD [가입방법]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_JDG_PRST_LST
	 *		- field : ROWNO [번호]
	 *		- field : PROGR_ST [진행상태]
	 *		- field : CNSL_DT [상담일자]
	 *		- field : IN_CONF_DT [입고확정일자]
	 *		- field : PROD_CHRTIC_1 [상품특성]
	 *		- field : MFACT_CD [제조사 코드]
	 *		- field : EQP_MDL_NM [단말기 모델명]
	 *		- field : EQP_MDL_CD [단말기 모델코드]
	 *		- field : EQP_SER_NO [단말기 일련번호]
	 *		- field : AFFIL_ORG_ID [소속조직코드(조직)]
	 *		- field : AFFIL_ORG_NM [소속조직명(조직)]
	 *		- field : AGN_ORG_CD [대리점 조직 코드]
	 *		- field : AFFIL_AGN [소속 대리점코드(팀코드)]
	 *		- field : AFFIL_AGN_NM [소속 대리점명(팀명)]
	 *		- field : CNSL_DEALCO_CD [상담 거래처코드(상담처)]
	 *		- field : CNSL_DEALCO_NM [상담 거래처명(상담처)]
	 *		- field : DPSTR [예금주]
	 *		- field : ONING_DT [개통일자]
	 *		- field : SKN_EQP_ST [SKN 단말기상태]
	 *		- field : EQP_PRC [단말기 가격]
	 *		- field : U_STRD_INCEN [UKEY 기준 인센티브]
	 *		- field : STRD_INCEN_SCOP_AMT [기준 인센티브 범위금액]
	 *		- field : SKN_JDG_AMT [SKN 상담금액]
	 *		- field : EQP_ST [단말기상태]
	 *		- field : EQP_ST_DTAIL [단말기 상태 세부]
	 *		- field : SALE_EQP_ST [판매등급]
	 *		- field : ADJ_AMT [조정금액]
	 *		- field : PRCH_AMT [매입금액]
	 *		- field : STRD_INCEN [기준 인센티브]
	 *		- field : DEC_INCV_AMT [확정인센티브]
	 *		- field : SKN_SMPL_JDG_DAMT [SKN 감정 차액]
	 *		- field : SKN_JDG_CL [SKN 감정구분]
	 *		- field : SKN_JDG_CL_SUB [SKN 감정구분 서브]
	 *		- field : EVALCNSLR_SUGG [평가원의견]
	 *		- field : INPT [검수자]
	 *		- field : TLY_DT [검수일자]
	 *		- field : SKN_PROC_YN [SKN 처리여부]
	 *		- field : SKN_PROC_DT [SKN 처리일자]
	 *		- field : CNSL_MGMT_NO [상담 관리 번호]
	 *		- field : OLDEQ_PAY_DT_1 [송금일자]
	 *		- field : OLDEQ_PAY_DT_2 [요금공제일자]
	 *		- field : BOX_NO [박스 번호]
	 *		- field : IMEI [IMEI]
	 *		- field : PRE_DC_CL [선할인구분]
	 *		- field : IN_USER_NM [입고처리담당자]
	 *		- field : BOX_PROC_CHRGR [박스처리담당자]
	 *		- field : BOX_DT [박스처리일자]
	 *		- field : SCRN_AFIMG_YN [화면잔상여부]
	 *		- field : CMCT_CO [통신사]
	 *		- field : SCRB_MTHD [가입방법]
	 *		- field : HEADQ_NM [본부 명]
	 *		- field : MKT_TEAM_CD [마케팅 팀 코드]
	 *		- field : MKT_TEAM_NM [마케팅 팀 명]
	 * </pre>
	 */
	public IDataSet fInqRJdgPrstList(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;
        
        try {
            // 1. DU lookup
            DEPRJdgInveMgmt dEPRJdgInveMgmt = (DEPRJdgInveMgmt)lookupDataUnit(DEPRJdgInveMgmt.class);
            
            // 2. TOTAL COUNT DM호출
            dsCnt = dEPRJdgInveMgmt.dSRJdgPrstListTotCnt(requestData, onlineCtx);   // 재감정회수일자누락목록 총건수        
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));     
            PagenateUtils.setPagenatedParamsToDataSet(reqDs);
            
            // 3. LISTDM호출
            responseData = dEPRJdgInveMgmt.dSRJdgPrstListPaging(reqDs, onlineCtx);    // 재감정회수일자누락목록 조회       
            rsPagingList = responseData.getRecordSet("RS_JDG_PRST_LST");          
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, reqDs, intTotalCnt);  
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
        
        return responseData;
	}
  
}
