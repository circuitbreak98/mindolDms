package dms.pr.prsimbase.biz;

import java.util.Map;

import fwk.common.CommonArea;
import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/임대R</li>
 * <li>단위업무명: [FU]단말기운송관리</li>
 * <li>설  명 : <pre>단말기운송관리</pre></li>
 * <li>작성일 : 2015-08-07 17:58:26</li>
 * <li>작성자 : 양재석 (jsyang)</li>
 * </ul>
 *
 * @author 양재석 (jsyang)
 */
public class FPREqpTransportMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FPREqpTransportMgmt(){
		super();
	}

    /**
	 * <pre>단말기운송정보조회</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-08-07 17:59:31
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_ETMM_TEMP_LIST
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_SER_NUM [단말기일련번호]
	 *		- field : INVE_ST_CD [입고상세코드]
	 *		- field : ASSET_NO [자산번호]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : EQP_WAYBIL_NO [단말기운송장번호]
	 *		- field : EQP_RCV_DT [단말기수취일자]
	 *		- field : WAYBIL_NO [운송장번호]
	 *		- field : HDLVCO_CD [택배사코드]
	 *		- field : HOME_DLV_AMT [택배비]
	 *		- field : HOME_DLV_SNDR_NM [택배발송자명]
	 *		- field : HOME_DLV_SND_DT [택배발송일자]
	 *		- field : HOME_DLV_SND_RSN [택배발송사유]
	 *		- field : LS_CHG_USER_ID [최종수정자ID]
	 *		- field : LS_CHG_DTM [최종수정일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqEqpTransInfoLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
    //IDataSet dsVal = new DataSet();
    //  IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;
    //String strEqpInNo = "";
        
        try {
            // 1. DU lookup
            DPREqpTransportMgmt dPREqpTransportMgmt = (DPREqpTransportMgmt) lookupDataUnit(DPREqpTransportMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dPREqpTransportMgmt.dSEqpTransInfoLstTotCnt(requestData, onlineCtx);
    //dsVal = dPRReqpClctInRgst.dIReqpClct(requestData, onlineCtx);
            
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
    //strEqpInNo = String.valueOf(dsCnt.getField("EQP_IN_NO"));
            
            
            
            PagenateUtils.setPagenatedParamsToDataSet(requestData);
            //PagenateUtils.setPagenatedParamsToDataSet(reqDs);
            // 3. LISTDM호출
            responseData = dPREqpTransportMgmt.dSEqpTransInfoLstPaging(requestData, onlineCtx);
    
            rsPagingList = responseData.getRecordSet("RS_LIST");
            
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
            
    
        } catch ( BizRuntimeException e ) {
            throw e;
        } catch ( Exception e ) {
            throw new BizRuntimeException("DMS00009", e); // 시스템 오류가 발생하였습니다.
        }       
        return responseData;
    }

    /**
	 * <pre>[FM]단말기운송정보등록</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-08-07 18:00:44
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : ST_DT [시작일]
	 *	- field : ED_DT [종료일]
	 *	- field : ST_DT_SEND [필드1]
	 *	- field : ED_DT_SEND [필드2]
	 *	- field : EQP_MDL_CD [모델]
	 *	- field : EQP_MDL_NM [모델명]
	 *	- field : EQP_SER_NUM [시리얼넘버]
	 *	- field : WAYBIL_NO [입고일자]
	 *	- field : HOME_DLV_SNDR_NM [발송자명]
	 *	- field : EQP_WAYBIL_NO [단말기운송장번호(K)]
	 *	- field : INVE_ST_CD [상태]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_LIST
	 *		- field : ASSET_NO [자산번호]
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_SER_NUM [단말기일련번호]
	 *		- field : INVE_ST_CD [회수구분코드]
	 *		- field : EQP_MDL_NM [단말기모델명]
	 *		- field : EQP_WAYBIL_NO [단말기운송장번호]
	 *		- field : EQP_RCV_DT [단말기수취일자]
	 *		- field : WAYBIL_NO [운송장번호]
	 *		- field : HDLVCO_CD [택배사코드]
	 *		- field : HOME_DLV_AMT [택배비]
	 *		- field : HOME_DLV_SNDR_NM [택배발송자명]
	 *		- field : HOME_DLV_SND_DT [택배발송일자]
	 *		- field : HOME_DLV_SND_RSN [택배발송사유]
	 * </pre>
	 */
	public IDataSet fRegEqpTransInfo(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DPREqpTransportMgmt dPREqpTransportMgmt = (DPREqpTransportMgmt) lookupDataUnit(DPREqpTransportMgmt.class);
            
            // 2. 단말기 운송조회정보 번호 채번
            IDataSet seqNoDs = dPREqpTransportMgmt.dSEqpTransInfoSeq(requestData, onlineCtx);
            requestData.putField("EQP_WAYBIL_NO", seqNoDs.getField("EQP_WAYBIL_NO"));
            
            // 3. 단말기 운송조회정보 등록
            responseData = dPREqpTransportMgmt.dIEqpTransInfo(requestData, onlineCtx);
                
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기운송정보수정</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-08-07 18:01:25
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_ETMM_TEMP_LIST
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_SER_NUM [단말기일련번호]
	 *		- field : INVE_ST_CD [입고상세코드]
	 *		- field : ASSET_NO [자산번호]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : EQP_WAYBIL_NO [단말기운송장번호]
	 *		- field : EQP_RCV_DT [단말기수취일자]
	 *		- field : WAYBIL_NO [운송장번호]
	 *		- field : HDLVCO_CD [택배사코드]
	 *		- field : HOME_DLV_AMT [택배비]
	 *		- field : HOME_DLV_SNDR_NM [택배발송자명]
	 *		- field : HOME_DLV_SND_DT [택배발송일자]
	 *		- field : HOME_DLV_SND_RSN [택배발송사유]
	 *		- field : LS_CHG_USER_ID [최종수정자ID]
	 *		- field : LS_CHG_DTM [최종수정일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdEqpTransInfo(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        
        try {
            // 1. DU lookup
            DPREqpTransportMgmt dPREqpTransportMgmt = (DPREqpTransportMgmt) lookupDataUnit(DPREqpTransportMgmt.class);
            
            // 2. 임대폰회수 입고 상태수정, 단말기 입고정보 수정, 단말기자산정보수정
            
            responseData = dPREqpTransportMgmt.dUEqpTransInfo(requestData, onlineCtx);
        //  responseData = dPRReqpClctInRgst.dUReqpClctTbEqpIn(requestData, onlineCtx);
        //  responseData = dPRReqpClctInRgst.dUReqpClctTbEqpAsset(requestData, onlineCtx);
                        
    
        } catch ( BizRuntimeException e ) {
            throw e;
        } 
    
        return responseData;
    }
  
}
