<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="DNRInsuFeeMgmt">
	<select id="SInqInsuFeeLstDtl" parameterClass="map" resultClass="hmap" fetchSize="50" ><![CDATA[/* Biz: dms.nr.nrsisbase.db.DNRInsuFeeMgmt.SInqInsuFeeLstDtl 보증보험료정산상세조회 */
/* IO: 장미진,2015-10-14T16:03:11(장미진,2015-10-13T16:46:57) */
SELECT  *
  FROM  (SELECT  ROW_NUMBER() OVER (ORDER BY SVC_MGMT_NO) AS ROWNO
                ,SUBSTR(A.NEW_CNTRT_DT,0,6) AS FEE_YM   /*정산년월*/
                ,A.SVC_MGMT_NO                          /*서비스관리번호*/
                ,E.EQP_MDL_NM                           /*모델명*/
                ,A.NEW_CNTRT_DT                         /*계약일*/
                ,B.SGI_INSURE_MGMT_NO                   /*보험관리번호*/
                ,B.SGI_INSURE_STA_DT                    /*보험가입일자*/
                ,0 AS INSURE_FEE                        /* DMS금액 계산금액필요*/
                ,B.SGI_INSURE_FEE                       /*SGI보험료*/
                ,CASE WHEN 0 = NVL(B.SGI_INSURE_FEE,0) THEN 'Y'
                      ELSE 'N'
                 END INVE_MATCHED     					/*일치여부*/						
           FROM  TB_NR_CNTRT A
                ,TB_INSU_SGI B
                ,TB_EQP_CNTRT C
                ,TB_EQP_ASSET D
                ,TB_EQP_MDL E
         WHERE  A.CNTRT_NO = B.CNTRT_NO(+)
           AND  A.CNTRT_NO = C.CNTRT_NO
           AND  C.ASSET_NO = D.ASSET_NO
           AND  D.EQP_MDL_CD = E.EQP_MDL_CD
           ) PA
]]><dynamic prepend="WHERE"><![CDATA[          
]]><isNotEmpty prepend="AND" property="FEE_YM"><![CDATA[
                PA.FEE_YM = #FEE_YM#
]]></isNotEmpty><![CDATA[ 
]]><isNotEmpty prepend="AND" property="INSURE_MGMT_NO"><![CDATA[
                PA.UKEY_INSURE_MGMT_NO  = #INSURE_MGMT_NO#
]]></isNotEmpty><![CDATA[ 
]]><isNotEqual prepend="AND" property="INVE_MATCHED" compareValue="%"><![CDATA[              
	            INVE_MATCHED = #INVE_MATCHED#
]]></isNotEqual><![CDATA[
]]></dynamic><![CDATA[
 AND ROWNO BETWEEN #nc_firstRowIndex# AND #nc_lastRowIndex#]]>
	</select>
	<select id="SInqInsuFeeLstSlip" parameterClass="map" resultClass="hmap" fetchSize="50" ><![CDATA[/* Biz: dms.nr.nrsisbase.db.DNRInsuFeeMgmt.SInqInsuFeeLstSlip 보증보험료정산전표조회 */
/* IO: 장미진,2015-10-14T13:26:59(장미진,2015-10-13T16:48:20) */
WITH BASE AS(         
               SELECT  COUNT(A.CNTRT_NO) AS CNT
                      ,SUBSTR(A.NEW_CNTRT_DT,0,6) AS FEE_YM
                      ,NVL(SUM(0),0) AS INSURE_FEE_SUM                      /* DMS금액 계산금액필요*/
                      ,NVL(SUM(B.SGI_INSURE_FEE),0) AS SGI_INSURE_FEE_SUM   /*SGI보험료*/
                      ,XCL_SLIP_NO
                      ,XCL_ST_CD
                      ,XCL_PROC_DT
                      ,'Y' AS INVE_MATCHED
                 FROM  TB_NR_CNTRT A
                      ,TB_INSU_SGI B
                      ,TB_ETC_XCL C
                WHERE  A.CNTRT_NO = B.CNTRT_NO(+)
                  AND  A.CNTRT_NO = C.CNTRT_NO(+)
                  AND  NVL(C.XCL_CL_CD,'00') = DECODE(C.XCL_ST_CD,NULL, '00','IP')
                  AND  SUBSTR(A.NEW_CNTRT_DT,0,6) = #FEE_YM#
                  AND  0 = NVL(B.SGI_INSURE_FEE,0)
              GROUP BY  SUBSTR(A.NEW_CNTRT_DT,0,6) ,XCL_ST_CD ,XCL_SLIP_NO ,XCL_PROC_DT
        UNION ALL
               SELECT  COUNT(A.CNTRT_NO) AS CNT
                      ,SUBSTR(A.NEW_CNTRT_DT,0,6) AS FEE_YM
                      ,NVL(SUM(0),0) AS INSURE_FEE_SUM                      /* DMS금액 계산금액필요*/
                      ,NVL(SUM(B.SGI_INSURE_FEE),0) AS SGI_INSURE_FEE_SUM   /*SGI보험료*/
                      ,XCL_SLIP_NO
                      ,XCL_ST_CD
                      ,XCL_PROC_DT
                      ,'N' AS INVE_MATCHED
                 FROM  TB_NR_CNTRT A
                      ,TB_INSU_SGI B
                      ,TB_ETC_XCL C
                WHERE  A.CNTRT_NO = B.CNTRT_NO(+)
                  AND  A.CNTRT_NO = C.CNTRT_NO(+)
                  AND  NVL(C.XCL_CL_CD,'00') = DECODE(C.XCL_ST_CD,NULL, '00','IP')
                  AND  SUBSTR(A.NEW_CNTRT_DT,0,6) = #FEE_YM#
                  AND  0 != NVL(B.SGI_INSURE_FEE,0)
              GROUP BY  SUBSTR(A.NEW_CNTRT_DT,0,6) ,XCL_ST_CD ,XCL_SLIP_NO ,XCL_PROC_DT)
SELECT  FEE_YM
       ,CNT
       ,INSURE_FEE_SUM
       ,SGI_INSURE_FEE_SUM
       ,XCL_SLIP_NO
       ,XCL_ST_CD
       ,XCL_PROC_DT
       ,INVE_MATCHED
  FROM BASE
]]><dynamic prepend="WHERE"><![CDATA[          
]]><isNotEmpty prepend="AND" property="FEE_YM"><![CDATA[
                FEE_YM = #FEE_YM#
]]></isNotEmpty><![CDATA[ 
]]><isNotEmpty prepend="AND" property="INSURE_MGMT_NO"><![CDATA[
                UKEY_INSURE_MGMT_NO  = #INSURE_MGMT_NO#
]]></isNotEmpty><![CDATA[ 
]]><isNotEqual prepend="AND" property="INVE_MATCHED" compareValue="%"><![CDATA[              
	            INVE_MATCHED = #INVE_MATCHED#
]]></isNotEqual><![CDATA[
]]></dynamic><![CDATA[]]>
	</select>
	<select id="SInqInsuFeeLstTotCnt" parameterClass="map" resultClass="hmap" fetchSize="50" ><![CDATA[/* Biz: dms.nr.nrsisbase.db.DNRInsuFeeMgmt.SInqInsuFeeLstTotCnt 보증보험료정산조회합계 */
/* IO: 장미진,2015-10-14T16:03:26(장미진,2015-10-13T16:50:20) */
SELECT  COUNT(SVC_MGMT_NO) AS TOTAL_CNT
	   ,NVL(SUM(SGI_INSURE_FEE),0) AS TOTAL_SUM		
  FROM  (SELECT  ROW_NUMBER() OVER (ORDER BY SVC_MGMT_NO) AS ROWNO
                ,SUBSTR(A.NEW_CNTRT_DT,0,6) AS FEE_YM   /*정산년월*/
                ,A.SVC_MGMT_NO                          /*서비스관리번호*/
                ,E.EQP_MDL_NM                           /*모델명*/
                ,A.NEW_CNTRT_DT                         /*계약일*/
                ,B.SGI_INSURE_MGMT_NO                   /*보험관리번호*/
                ,B.SGI_INSURE_STA_DT                    /*보험가입일자*/
                ,0 AS INSURE_FEE                        /* DMS금액 계산금액필요*/
                ,B.SGI_INSURE_FEE                       /*SGI보험료*/
                ,CASE WHEN 0 = B.SGI_INSURE_FEE THEN 'Y'
                      ELSE 'N'
                 END INVE_MATCHED     					/*일치여부*/						
           FROM  TB_NR_CNTRT A
                ,TB_INSU_SGI B
                ,TB_EQP_CNTRT C
                ,TB_EQP_ASSET D
                ,TB_EQP_MDL E
         WHERE  A.CNTRT_NO = B.CNTRT_NO(+)
           AND  A.CNTRT_NO = C.CNTRT_NO
           AND  C.ASSET_NO = D.ASSET_NO
           AND  D.EQP_MDL_CD = E.EQP_MDL_CD
           ) PA
]]><dynamic prepend="WHERE"><![CDATA[          
]]><isNotEmpty prepend="AND" property="FEE_YM"><![CDATA[
                PA.FEE_YM = #FEE_YM#
]]></isNotEmpty><![CDATA[ 
]]><isNotEmpty prepend="AND" property="INSURE_MGMT_NO"><![CDATA[
                PA.UKEY_INSURE_MGMT_NO  = #INSURE_MGMT_NO#
]]></isNotEmpty><![CDATA[ 
]]><isNotEqual prepend="AND" property="INVE_MATCHED" compareValue="%"><![CDATA[              
	            INVE_MATCHED = #INVE_MATCHED#
]]></isNotEqual><![CDATA[
]]></dynamic><![CDATA[
 AND ROWNO BETWEEN #nc_firstRowIndex# AND #nc_lastRowIndex#]]>
	</select>
	<select id="SInsuFeeAllExcel" parameterClass="map" resultClass="hmap" fetchSize="50" ><![CDATA[/* Biz: dms.nr.nrsisbase.db.DNRInsuFeeMgmt.SInsuFeeAllExcel 보증보험료정산전체엑셀 */
/* IO: 장미진,2015-10-14T16:12:08(장미진,2015-10-14T15:56:51) */
SELECT  ROW_NUMBER() OVER (ORDER BY SVC_MGMT_NO) AS ROWNO
       ,SUBSTR(A.NEW_CNTRT_DT,0,6) AS "정산년월"   /*정산년월*/
       ,A.SVC_MGMT_NO              AS "서비스관리번호"         /*서비스관리번호*/
       ,E.EQP_MDL_NM               AS "모델명"              /*모델명*/
       ,A.NEW_CNTRT_DT             AS "계약일"              /*계약일*/
       ,B.SGI_INSURE_MGMT_NO       AS "보험관리번호"              /*보험관리번호*/
       ,B.SGI_INSURE_STA_DT        AS "보험가입일자"              /*보험가입일자*/
       ,0 /*AS INSURE_FEE*/            AS "DMS보험료"              /* DMS금액 계산금액필요*/
       ,B.SGI_INSURE_FEE           AS "SGI보험료"              /*SGI보험료*/
       ,CASE WHEN 0 = NVL(B.SGI_INSURE_FEE,0) THEN '미일치'
             ELSE '일치'
         END /*INVE_MATCHED*/     		AS "일치여부"			/*일치여부*/						
  FROM  TB_NR_CNTRT A
       ,TB_INSU_SGI B
       ,TB_EQP_CNTRT C
       ,TB_EQP_ASSET D
       ,TB_EQP_MDL E
 WHERE  A.CNTRT_NO = B.CNTRT_NO(+)
   AND  A.CNTRT_NO = C.CNTRT_NO
   AND  C.ASSET_NO = D.ASSET_NO
   AND  D.EQP_MDL_CD = E.EQP_MDL_CD
   AND  SUBSTR(A.NEW_CNTRT_DT,0,6) = #FEE_YM#]]>
	</select>
</sqlMap>