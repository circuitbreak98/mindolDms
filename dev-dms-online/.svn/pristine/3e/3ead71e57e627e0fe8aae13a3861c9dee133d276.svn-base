package dms.nr.nrbxmbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [PU]렌탈비정산내역관리</li>
 * <li>설  명 : </li>
 * <li>작성일 : 2015-09-07 17:57:03</li>
 * <li>작성자 : 장미진 (kuramotojin)</li>
 * </ul>
 *
 * @author 장미진 (kuramotojin)
 */
public class PNRRentalFeeCctlMgmt extends fwk.base.ProcessUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public PNRRentalFeeCctlMgmt(){
		super();
	}

	/**
	 *
	 *
	 * @author 장미진 (kuramotojin)
	 * @since 2015-09-07 17:57:03
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : EQP_MDL_CD [모델코드]
	 *	- field : RENTAL_YM [렌탈년월]
	 *	- field : OP_TYP_CD [계약상태]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_RENTAL_FEE_INFO_LIST
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : RENTAL_FEE [DMS금액 = 렌탈료]
	 *		- field : INV_AMT [UKEY금액 = 청구금액]
	 *		- field : RECV_DT [수납금액]
	 *	- record : RS_RENTAL_FEE_INFO_DETAIL
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : RENT_STA_DT [계약시작일]
	 *		- field : RENT_END_SCHD_DT [계약종료예정일]
	 *		- field : RENT_END_DT [실 계약종료일]
	 *		- field : INV_AMT [UKEY금액 = 청구금액]
	 *		- field : RECV_DT [수납금액]
	 *		- field : ARREAR_PRC [미납금액]
	 *		- field : SLIP_ST [전표상태]
	 *		- field : SLIP_NO [전표번호]
	 *		- field : RENTAL_FEE [DMS금액 =렌탈료]
	 *		- field : CNT [회차]
	 *	- record : RS_SUM_LIST
	 *		- field : M_CNT [메인총카운트]
	 *		- field : M_PRC [메인총금액]
	 *		- field : S_CNT [서브총카운트]
	 *		- field : S_PRC [서브총금액]
	 * </pre>
	 */
	public IDataSet pInqRentalFeeCctlInfoLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    
	    try {
			// 1. FM 호출
			responseData = callSharedBizComponentByDirect("nr.NRSXMBase", "fInqRentalFeeCctlInfoLst", requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		} catch ( Exception e ) {
			throw new BizRuntimeException("DMS00009", e); // 시스템 오류가 발생하였습니다.
		}
		// 2. 결과값 리턴
		responseData.setOkResultMessage("DMS00001", null); // 정상 조회되었습니다.
	
	    return responseData;
	}
  
}
