package dms.nr.nrsxmbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.HpcUtils;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]렌탈매출확정정보관리</li>
 * <li>설  명 : </li>
 * <li>작성일 : 2015-08-07 13:10:17</li>
 * <li>작성자 : 김혁범 (kezmain1)</li>
 * </ul>
 *
 * @author 김혁범 (kezmain1)
 */
public class FNRRentalSaleFixMgnt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRRentalSaleFixMgnt(){
		super();
	}

	/**
	 *렌탈매출확정조회
	 *
	 * @author 김혁범 (kezmain1)
	 * @since 2015-08-07 13:10:17
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqRentalSaleFixLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	      
	      IDataSet dsCnt = new DataSet();
		  IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		  IRecordSet usrListRs = null;
		  int intTotalCnt = 0;
		  
		  try {
				// 1. DU lookup
			  DNRRentalSaleFixMgnt   dNRRentalSaleFixMgnt = (DNRRentalSaleFixMgnt) lookupDataUnit(DNRRentalSaleFixMgnt.class);
				
				// 2. TOTAL COUNT DM호출
				dsCnt = dNRRentalSaleFixMgnt.dSRentalSaleTotCnt(requestData, onlineCtx);
				intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
				PagenateUtils.setPagenatedParamsToDataSet(reqDs);

				// 3. LISTDM호출
				responseData = dNRRentalSaleFixMgnt.dSRentalSaleLstPaging(reqDs, onlineCtx);
				usrListRs = responseData.getRecordSet("RS_RENTAL_SALE_FIX_LIST");
				PagenateUtils.setPagenatedParamToRecordSet(usrListRs, reqDs, intTotalCnt);
				
				IDataSet dsList = dNRRentalSaleFixMgnt.dSRentalSaleLst(requestData,onlineCtx);
				responseData.putRecordSet(dsList.getRecordSet("RS_RENTAL_SALE_FIX_MAIN"));
				
				//렌탈매출확정 기준일자 리스트조회
				IDataSet dsRtn = dNRRentalSaleFixMgnt.dSrentalSaleAsmptLst(requestData, onlineCtx);
				responseData.putRecordSet(dsRtn.getRecordSet("RS_SALE_SUM"));
				
				//매출추정정보 개인,법인사용자 리스트조회
				IDataSet dsRtn2 = dNRRentalSaleFixMgnt.dSRentalSaletPriLst(requestData, onlineCtx);
				responseData.putRecordSet(dsRtn2.getRecordSet("RS_SALE_ASMPT_PRI_LIST"));
				
			} catch ( BizRuntimeException e ) {
				throw e; //시스템 오류가 발생하였습니다.
			}
	
	    return responseData;
	}

	/**
	 *렌탈매출확정상세
	 *
	 * @author 김혁범 (kezmain1)
	 * @since 2015-08-07 14:39:27
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqRentalSaleFixDtlLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    try {
			// 1. DU lookup
	    	DNRRentalSaleFixMgnt dNRRentalSaleFixMgnt = (DNRRentalSaleFixMgnt) lookupDataUnit(DNRRentalSaleFixMgnt.class);
	    	requestData.putField("SVC_NO", HpcUtils.encodeByAES(requestData.getField("SVC_NO")));

			// 2. LISTDM호출
			responseData = dNRRentalSaleFixMgnt.dSRentalSaleDtlLst(requestData, onlineCtx);
			
			//렌탈매출확정상세 기준일자 리스트조회
			IDataSet dsRtn = dNRRentalSaleFixMgnt.dSrentalSaleAsmptDtlLst(requestData, onlineCtx);
			responseData.putRecordSet(dsRtn.getRecordSet("RS_SALE_SUM"));
			
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		} 
	
	    return responseData;
	}
  
}
