package dms.pr.prsimbase.biz;

import java.util.Map;

import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/임대R</li>
 * <li>단위업무명: [FU]임대폰출고회수관리</li>
 * <li>설  명 : <pre>임대폰출고회수관리</pre></li>
 * <li>작성일 : 2015-07-24 13:18:34</li>
 * <li>작성자 : 박민정 (dangnagu2)</li>
 * </ul>
 *
 * @author 박민정 (dangnagu2)
 */
public class FPRReqpInveInfoSend extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FPRReqpInveInfoSend(){
		super();
	}

	/**
	 * <pre>임대폰재고조회</pre>
	 *
	 * @author 박민정 (dangnagu2)
	 * @since 2015-07-24 13:18:34
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : STA_IN_DT [조회입고시작일]
	 *	- field : END_IN_DT [조회입고종료일]
	 *	- field : EQP_MDL_NM [모델명]
	 *	- field : STA_RENT_IN_DT [조회렌트시작기간시작]
	 *	- field : END_RENT_IN_DT [조회렌트시작기간종료]
	 *	- field : INVE_ST_CD [재고상태코드]
	 *	- field : BOX_NO [BOX_NO]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_IN_LIST
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_SER_NO [단말기일련번호]
	 *		- field : EQP_IMEI_NO [단말기IMEI번호]
	 *		- field : EQP_COLOR_CD [단말기색상코드]
	 *		- field : OP_CL_CD [업무구분코드]
	 *		- field : INVE_ST_CD [재고상태코드]
	 *		- field : PRCH_AMT [매입금액]
	 *		- field : FST_IN_DT [최초입고일자]
	 *		- field : PRCH_DT [매입일자]
	 *		- field : LAST_EXPART_DT [최종교품일자]
	 *		- field : IN_OUT_GUBUN_CD [입출고구분코드]
	 *		- field : LAST_IN_OUT_NO [최종입출고번호]
	 *		- field : LOSS_DT [분실일자]
	 *		- field : BOX_NO [BOX NO]
	 *		- field : EQP_IN_NO [단말기입고번호]
	 *		- field : ASSET_NO [자산번호]
	 *		- field : IN_DT [입고일자]
	 *		- field : IN_DTL_CD [입고상세코드]
	 *		- field : IN_DEALCO_CD [입고처코드]
	 *		- field : CHRG_DEPT_CD [담당부서코드]
	 *		- field : EQP_MDL_NM [단말기모델명]
	 *		- field : CM_CD_NM [재고상태 코드명]
	 *		- field : CNTRT_NO [계약번호]
	 *		- field : RENT_STA_DT [렌트시작일자]
	 *		- field : RENT_END_SCHD_DT [렌트종료예정일자]
	 *		- field : RENT_END_DT [렌트종료일자]
	 *		- field : RENT_APRV_YN [렌트승인여부]
	 * </pre>
	 */
	public IDataSet fInqReqpInveLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet rsPagingList = null;
		int intTotalCnt = 0;

		try {
			// 1. DU lookup
			DPRReqpInveInfoSend dPRReqpInveInfoSend = (DPRReqpInveInfoSend) lookupDataUnit(DPRReqpInveInfoSend.class);
			// 2. TOTAL COUNT DM호출
			dsCnt = dPRReqpInveInfoSend.dSReqpInveLstTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);
			// 3. LISTDM호출
			responseData = dPRReqpInveInfoSend.dSReqpInveLstPaging(reqDs, onlineCtx);

			rsPagingList = responseData.getRecordSet("RS_EQP_IN_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, reqDs, intTotalCnt);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
	
	    return responseData;
	}

	/**
	 * <pre>임대폰출고단말기계약등록</pre>
	 *
	 * @author 박민정 (dangnagu2)
	 * @since 2015-07-24 13:18:34
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_CNTRT_LIST
	 *		- field : ASSET_NO [자산번호]
	 *		- field : CNTRT_NO [계약번호]
	 *		- field : RENT_STA_DT [렌트시작일자]
	 *		- field : RENT_END_SCHD_DT [렌트종료예정일자]
	 *		- field : RENT_END_DT [렌트종료일자]
	 *		- field : RENT_APRV_YN [렌트승인여부]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegReqpOutCntrtStat(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    try {
			// 1. DU lookup
	    	DPRReqpInveInfoSend dPRReqpInveInfoSend = (DPRReqpInveInfoSend) lookupDataUnit(DPRReqpInveInfoSend.class);
	    	
			// 3. 단말기계약등록
	    	
			responseData = dPRReqpInveInfoSend.dIReqpOutCntrtRgst(requestData, onlineCtx);  	

		} catch ( BizRuntimeException e ) {
			throw e;
		} 
	
	    return responseData;
	}

	/**
	 * <pre>임대폰출고단말기계약상태수정</pre>
	 *
	 * @author 박민정 (dangnagu2)
	 * @since 2015-07-24 13:18:34
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_CNTRT_LIST
	 *		- field : ASSET_NO [자산번호]
	 *		- field : CNTRT_NO [계약번호]
	 *		- field : RENT_STA_DT [렌트시작일자]
	 *		- field : RENT_END_SCHD_DT [렌트종료예정일자]
	 *		- field : RENT_END_DT [렌트종료일자]
	 *		- field : RENT_APRV_YN [렌트승인여부]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdReqpOutCntrtStat(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    try {
			// 1. DU lookup
	    	DPRReqpInveInfoSend dPRReqpInveInfoSend = (DPRReqpInveInfoSend) lookupDataUnit(DPRReqpInveInfoSend.class);
	    	
			// 3. 단말기계약수정
	    	
			responseData = dPRReqpInveInfoSend.dUReqpOutCntrtStat(requestData, onlineCtx);  	

		} catch ( BizRuntimeException e ) {
			throw e;
		} 
	
	    return responseData;
	}
  
}
