package dms.nr.nrsxmbase.biz;

import org.apache.commons.logging.Log;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.common.CommonArea;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]대리점단말기정산정보관리</li>
 * <li>설  명 : <pre>대리점단말기정산정보관리FU</pre></li>
 * <li>작성일 : 2015-08-18 10:06:59</li>
 * <li>작성자 : 이민재 (mindol1004)</li>
 * </ul>
 *
 * @author 이민재 (mindol1004)
 */
public class FNRAgnEqpStlMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRAgnEqpStlMgmt(){
		super();
	}

    /**
	 * <pre>대리점단말기정산정보조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2015-08-18 10:06:59
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : PRCH_STA_DT [매입시작일]
	 *	- field : PRCH_END_DT [매입종료일]
	 *	- field : AGN_CD [대리점코드]
	 *	- field : SLIP_TS [전표차수]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_AGN_EQP_STL_LIST
	 *		- field : PRCHCO_CD [대리점코드]
	 *		- field : PRCHCO_NM [대리점명]
	 *		- field : DEALCO_BLICENS_NO [사업자번호]
	 *		- field : XCL_PROC_DT [정산월]
	 *		- field : SLIP_TS [전표차수]
	 *		- field : SLIP_NO [전표번호]
	 *		- field : SLIP_DT [전표처리일]
	 *		- field : PRCH_AMT [정산금액]
	 *		- field : PAY_YM [지급년월]
	 *		- field : AGN_CRD_AMT [대리점여신금액]
	 *		- field : AGN_SALE_AMT [대리점매출금액]
	 *		- field : CRD_SALE_DAMT [여신매출차액]
	 * </pre>
	 */
	public IDataSet fInqAgnEqpStlLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        // 처리 결과값을 responseData에 넣어서 리턴하십시요 
        IDataSet dsCnt = new DataSet();
        IRecordSet rsList = null;
        int intTotalCnt = 0;

        try {
            // 1. DU lookup
            DNRAgnEqpStlMgmt dNRAgnEqpStlMgmt = (DNRAgnEqpStlMgmt) lookupDataUnit(DNRAgnEqpStlMgmt.class);
            
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRAgnEqpStlMgmt.dSAgnEqpStlTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(requestData);

            // 3. LISTDM호출
            responseData = dNRAgnEqpStlMgmt.dSAgnEqpStlLstPaging(requestData, onlineCtx);
            rsList = responseData.getRecordSet("RS_AGN_EQP_STL_LIST");
            PagenateUtils.setPagenatedParamToRecordSet(rsList, requestData, intTotalCnt);
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
        return responseData;
    }

    /**
	 * <pre>대리점단말기정산정보상세</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2015-08-18 10:06:59
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : XCL_PROC_DT [정산월]
	 *	- field : PRCHCO_CD [대리점코드]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_AGN_EQP_STL_DTL
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : EQP_MDL_NM [모델명]
	 *		- field : EQP_COLOR_CD [색상코드]
	 *		- field : PRCH_DT [매입일자]
	 *		- field : PRCH_AMT [매입금액]
	 * </pre>
	 */
	public IDataSet fInqAgnEqpStlDtl(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        try {
            // 1. DU lookup
            DNRAgnEqpStlMgmt dNRAgnEqpStlMgmt = (DNRAgnEqpStlMgmt) lookupDataUnit(DNRAgnEqpStlMgmt.class);

            // 2. LISTDM호출
            responseData = dNRAgnEqpStlMgmt.dSAgnEqpStlDtl(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
    
        return responseData;
    }

    /**
	 * <pre>대리점단말기정산정보전표생성</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2015-08-31 16:01:58
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegAgnEqpStlSlip(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet erpSlipData = null;
        IDataSet assetNoData = null;
    
        try {
            // 1. FM 호출
            IRecordSet erpSlipRs = requestData.getRecordSet("ERP_SLIP_LIST");
            if( erpSlipRs == null ){
                return responseData;
            }
            
            // 1. DU lookup
            DNRAgnEqpStlMgmt dNRAgnEqpStlMgmt = (DNRAgnEqpStlMgmt) lookupDataUnit(DNRAgnEqpStlMgmt.class);
            
            for(int i=0; i < erpSlipRs.getRecordCount(); i++){
                erpSlipData = new DataSet();
                erpSlipData.putFieldMap(erpSlipRs.getRecordMap(i));
                erpSlipData.putField("USERNO", requestData.getField("USERNO"));
                
                dNRAgnEqpStlMgmt.dUAgnEqpStlPrchSlip(erpSlipData, onlineCtx);
                
                IRecordSet assetNoRs = dNRAgnEqpStlMgmt.dSAgnEqpStlAssetNoLst(erpSlipData, onlineCtx).getRecordSet("RS_AGN_EQP_ASSET_LIST");
                
                for(int j=0; j < assetNoRs.getRecordCount(); j++){
                    assetNoData = new DataSet();
                    assetNoData.putFieldMap(assetNoRs.getRecordMap(j));
                    assetNoData.putField("ASSET_SLIP_NO", erpSlipData.getField("SLIP_NO"));
                    assetNoData.putField("USERNO", requestData.getField("USERNO"));
                    dNRAgnEqpStlMgmt.dIAgnEqpStlSlip(assetNoData, onlineCtx);
                }
            }
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
    
        return responseData;
    }

	/**
	 *
	 *
	 * @author 김혁범 (kezmain1)
	 * @since 2015-08-18 10:06:59
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_SLIP_DELETE
	 *		- field : PRCHCO_CD [필드1]
	 *		- field : PRCHCO_NM [필드2]
	 *		- field : DEALCO_BLICENS_NO [필드3]
	 *		- field : XCL_PROC_DT [필드4]
	 *		- field : SLIP_TS [필드5]
	 *		- field : SLIP_NO [필드1]
	 *		- field : SLIP_DT [필드2]
	 *		- field : PRCH_AMT [필드3]
	 *		- field : PAY_YM [필드4]
	 *		- field : AGN_CRD_AMT [필드1]
	 *		- field : AGN_SALE_AMT [필드2]
	 *		- field : CRD_SALE_DAMT [필드1]
	 *		- field : SLIP_ST_CD [필드2]
	 *		- field : TAX_BILL_NO [필드3]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fSaveAgnEqpStlSlipDel(IDataSet requestData, IOnlineContext onlineCtx) {
		Log log = getLog(onlineCtx);
	    IDataSet responseData = new DataSet();
	    CommonArea ca = getCommonArea(onlineCtx);
	    
	    try{
	    	// 1. FM 호출 --전표번호를 삭제하고,삭제전표번호를 받는다
	    	//requestData = callSharedBizComponentByDirect("nr.NRSXMBase", "fRemoveSlip", requestData, onlineCtx);
	    	FNRErpIF fNRErpIf = (FNRErpIF) lookupFunctionUnit(FNRErpIF.class);
	    	responseData = fNRErpIf.fRemoveSlip(requestData, onlineCtx);
	    	responseData.putField("USER_NO", ca.getUserNo());
	    	
	    	// 2. DU lookup -- 전표취소처리
	    	 DNRAgnEqpStlMgmt dNRAgnEqpStlMgmt = (DNRAgnEqpStlMgmt) lookupDataUnit(DNRAgnEqpStlMgmt.class);
	    	 responseData = dNRAgnEqpStlMgmt.dUAgnEqpStlSlipDel(responseData, onlineCtx);
	    
	    } catch(BizRuntimeException e){
	    	throw e;
	    } catch ( Exception e ) {
			throw new BizRuntimeException("DMS00009", e); // 시스템 오류가 발생하였습니다.
		}
	    
	    // 3. 결과값 리턴
	    //responseData.setOkResultMessage("DMS00001", null); // 정상 조회되었습니다.
	
	    // 처리 결과값을 responseData에 넣어서 리턴하십시요 
	
	    return responseData;
	}
  
}
