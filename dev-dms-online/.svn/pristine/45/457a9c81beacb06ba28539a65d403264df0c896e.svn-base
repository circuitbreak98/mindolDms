package dms.ep.epssxbase.biz;

import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.xml.DataSetXmlTransformer;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.common.CommonArea;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [FU]단말기대금선할인정산관리</li>
 * <li>설  명 : <pre>단말기대금선할인정산관리 FU</pre></li>
 * <li>작성일 : 2015-10-23 09:52:49</li>
 * <li>작성자 : 이민재 (mindol1004)</li>
 * </ul>
 *
 * @author 이민재 (mindol1004)
 */
public class FEPEqpPreDcXclMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FEPEqpPreDcXclMgmt(){
		super();
	}

    /**
	 * <pre>[FM]단말기대금선할인집계대상목록조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-23 09:52:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DCINAD_STRD_YM [선할인 정산기준년월]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_PREDC_TOT_LIST
	 *		- field : REPV_AGN_ORG_CD [대표대리점 코드]
	 *		- field : AMT_CNT [선할인 총 수량 건수]
	 *		- field : CNSL_AMT [선할인 총 금액]
	 *		- field : ERR_CNT [선할인 오류 건수]
	 *		- field : DDCT_AMT [선할인 차감금액]
	 *		- field : PPAY_RMT_AMT_CNT [선납,송금 총 수량 건수]
	 *		- field : PPAY_RMT_CNSL_AMT [선납,송금 총 금액]
	 *		- field : PPAY_RMT_ERR_CNT [선납,송금 오류 건수]
	 *		- field : PPAY_RMT_DDCT_AMT [선납,송금 차감금액]
	 *		- field : EQP_TOT [단말기정산총건수]
	 *		- field : DCINAD_XCL_CNT [선할인 정산 건수]
	 *		- field : DCINAD_AMT [선할인 금액]
	 * </pre>
	 */
	public IDataSet fSEqpPreDcTotLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    try {
            // 1. DU lookup
	        DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dSEqpPreDcTotLst(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산번호조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-23 09:52:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- field : DCINAD_XCL_NO [선할인 정산 번호]
	 * </pre>
	 */
	public IDataSet fSEqpDcinadXclNo(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dSEqpDcinadXclNo(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금대리점코드조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-28 11:09:44
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fSEqpDealcoCd(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dSEqpDealcoCd(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산등록</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-23 09:52:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DCINAD_XCL_NO [선할인 정산 번호]
	 *	- field : DCINAD_STRD_YM [선할인 기준 년월]
	 *	- field : REPV_AGN_ORG_CD [대표 대리점 조직 코드]
	 *	- field : DCINAD_AMT [선할인 금액]
	 *	- field : DCINAD_XCL_CNT [선할인 정산 건수]
	 *	- field : USER_ID [등록ID]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- field : insertRow [등록건수]
	 * </pre>
	 */
	public IDataSet fIEqpDcinadXcl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dIEqpDcinadXcl(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산상세등록</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-23 09:52:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DCINAD_XCL_NO [선할인 정산 번호]
	 *	- field : DCINAD_STRD_YM [선할인 기준 년월]
	 *	- field : REPV_AGN_ORG_CD [대표 대리점 조직 코드]
	 *	- field : DCINAD_AMT [선할인 금액]
	 *	- field : DCINAD_XCL_CNT [선할인 정산 건수]
	 *	- field : USER_ID [등록ID]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- field : insertRow [등록건수]
	 * </pre>
	 */
	public IDataSet fIEqpDcinadXclDtl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            /*
            IRecordSet rsDealcoCdList = dEPEqpPreDcXclMgmt.dSEqpDealcoCd(requestData, onlineCtx).getRecordSet("RS_DEALCO_CD_LIST");
            List<String> svcLst = new ArrayList<String>();            
            for (int i = 0; i < rsDealcoCdList.getRecordCount(); i++) {
                svcLst.add(rsDealcoCdList.get(i, "DEALCO_CD"));
            }
            String[] sSvcList = svcLst.toArray(new String[svcLst.size()]);
            
            requestData.putField("CNSL_DEALCO_CD_LIST", sSvcList);
            */
            responseData = dEPEqpPreDcXclMgmt.dIEqpDcinadXclDtl(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산삭제</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-28 11:10:22
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fDEqpDcinadXcl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dDEqpDcinadXcl(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산상세삭제</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-28 11:10:30
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fDEqpDcinadXclDtl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dDEqpDcinadXclDtl(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산목록조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-23 09:52:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DCINAD_STRD_YM [선할인 기준 년월]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_DCINAD_LIST
	 *		- field : DCINAD_XCL_NO [선할인 정산 번호]
	 *		- field : DCINAD_STRD_YM [선할인 기준 년월]
	 *		- field : REPV_AGN_ORG_CD [대표 대리점 조직 코드]
	 *		- field : DEALCO_NM [상호명]
	 *		- field : DEALCO_BLICENS_NO [사업자번호]
	 *		- field : DCINAD_AMT [선할인 금액]
	 *		- field : DCINAD_XCL_CNT [선할인 정산 건수]
	 *		- field : DCINAD_SLIP_DT [선할인 전표 일자]
	 *		- field : DCINAD_SLIP_NO [선할인 전표 번호]
	 *		- field : DCINAD_SLIP_ST [선할인 전표 상태]
	 *		- field : DCINAD_CNCL_SLIP_DT [선할인 취소 전표 일자]
	 *		- field : DCINAD_CNCL_SLIP_NO [선할인 취소 전표 번호]
	 *		- field : SLIP_ST_CD [전표상태코드]
	 *		- field : SLIP_DT [전표일자]
	 * </pre>
	 */
	public IDataSet fSEqpDcinadXcl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;    
        
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dEPEqpPreDcXclMgmt.dSEqpDcinadXclTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(requestData);
            
            // 3. LISTDM호출
            responseData = dEPEqpPreDcXclMgmt.dSEqpDcinadXclPaging(requestData, onlineCtx);
            rsPagingList = responseData.getRecordSet("RS_EQP_DCINAD_LIST");          
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        
        return responseData;
    }

    /**
	 * <pre>[FM]단말기대금선할인정산상세엑셀목록조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-10-28 11:10:47
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fSEqpDcinadXclDtlExcelLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DEPEqpPreDcXclMgmt dEPEqpPreDcXclMgmt = (DEPEqpPreDcXclMgmt)lookupDataUnit(DEPEqpPreDcXclMgmt.class);
            responseData = dEPEqpPreDcXclMgmt.dSEqpDcinadXclDtlExcelLst(requestData, onlineCtx);
            
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }
  
}
