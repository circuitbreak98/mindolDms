package dms.ep.epscsbase.biz;

import java.util.Map;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [FU]입고관리</li>
 * <li>설  명 : <pre>[FU]입고관리</pre></li>
 * <li>작성일 : 2015-08-19 09:54:21</li>
 * <li>작성자 : 김상오 (myneti99)</li>
 * </ul>
 *
 * @author 김상오 (myneti99)
 */
public class FEPEqpInMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FEPEqpInMgmt(){
		super();
	}

	/**
	 * <pre>[FM]단말기입고대상조회</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-19 09:55:16
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqEqpInObjList(IDataSet requestData, IOnlineContext onlineCtx) {
		 IDataSet responseData = new DataSet();
	        try {
	            // 1. DU lookup
	        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
	            // 2. 업무 DM호출
	            responseData = du.dInqEqpInObjList(requestData, onlineCtx);
	        } catch ( BizRuntimeException e ) {
	            throw e;
	        }
		    
		    return responseData;
	}

	/**
	 * <pre>[FM]의견저장</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-21 16:15:13
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUInProcRsn(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
        try {
        	// 1. DU lookup
        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
            // 2. 업무 DM호출
            responseData = du.dUInProcRsn(requestData, onlineCtx);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	   
	    return responseData;
	}

	/**
	 * <pre>[FM]단말기입고대상등록</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-24 15:34:05
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegEqpInObjList(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        try {
        	// 1. DU lookup
        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
            // 2. 업무 DM호출
            responseData = du.dIEqpInObjListReg(requestData, onlineCtx);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	   
	    return responseData;
	}

	/**
	 * <pre>입고확정등록</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-26 17:24:26
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdEqpInChkList(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
        try {
        	// 1. DU lookup
        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
            // 2. 업무 DM호출
            responseData = du.dUpdEqpInChkList(requestData, onlineCtx); 
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	   
	    return responseData;
	}

	/**
	 * <pre>[FM]입고등록취소</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-26 18:20:02
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdEqpRegCncl(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
        try {
        	// 1. DU lookup
        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
            // 2. 업무 DM호출
            responseData = du.dUpdEqpRegCncl(requestData, onlineCtx); 
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	   
	    return responseData;
	}

	/**
	 * <pre>[FM]입고제외처리</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-19 09:54:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUEqpInExl(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
        try {
        	// 1. DU lookup
        	DEPEqpInMgmt du = (DEPEqpInMgmt) lookupDataUnit(DEPEqpInMgmt.class);
            // 2. 업무 DM호출
            responseData = du.dUEqpInExl(requestData, onlineCtx); 
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	   
	    return responseData;
	}

	/**
	 *
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-08-19 09:54:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_IN_OBJ_LIST
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : PROD_NM [모델명]
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : DPSTR [고객명]
	 *		- field : CNSL_DT [상담일자]
	 *		- field : CNSL_DEALCO_CD [상담처코드]
	 *		- field : CON_PLC_NM [상담처명]
	 *		- field : ONING_DT [개통일자]
	 *		- field : EQP_ST [단말기등급]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : LOSS_EQP_YN [분실단말기여부]
	 *		- field : RWD_RTN_OBJ_YN [보상반납대상여부]
	 *		- field : RENTP_YN [임대폰여부]
	 *		- field : USIM_EQPCHG_YN [USIM기변여부]
	 *		- field : OTHRCO_FORGN_EQP_YN [타사/해외단말기여부]
	 *		- field : SVC_NO [서비스번호]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : IMEI [IMEI]
	 *		- field : FEE_DEDC_YN [요금공제여부]
	 *		- field : SKN_JDG_AMT [매입금액]
	 *		- field : PRCH_CL [검수구분]
	 *		- field : CHECK_DT [검수일자]
	 *		- field : CUST_YN [고객의사]
	 *		- field : CUST_DT [고객확인일자]
	 *		- field : ACC_NM [예금주]
	 *		- field : BANK_CD [은행코드]
	 *		- field : BANK_NM [은행명]
	 *		- field : ACCO_NO [계좌번호]
	 *		- field : TEL_NO [전화번호]
	 *		- field : ZIPCD_1 [우편번호1]
	 *		- field : ZIPCD_2 [우편번호2]
	 *		- field : ADDR [주소]
	 *		- field : ETC_ADDR [기타주소]
	 *		- field : SUGG [의견]
	 *		- field : T_MGMT_NO [T_관리번호]
	 *		- field : BATTERY [배터리]
	 *		- field : CHARGER [충전기]
	 *		- field : ZENDER [젠더]
	 *		- field : EARPHONES [이어폰]
	 *		- field : CASE [충전 Case]
	 *		- field : USB [USB CABLE]
	 *		- field : MEMORY [메모리카드]
	 *		- field : DTL_1 [구성품_1]
	 *		- field : DTL_2 [구성품_2]
	 *		- field : DTL_3 [구성품_3]
	 *		- field : OTHER [기타구성품]
	 *		- field : CUST_GRP [단체명]
	 *		- field : PRC_GB [처리구분]
	 *		- field : ERR_DESC [ERROR]
	 *		- field : SKN_CL [SKN구분]
	 *		- field : XCL_MODE [정산구분]
	 *	- field : IN_GUBUN [입고구분]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegPrNrIn(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    // 처리 결과값을 responseData에 넣어서 리턴하십시요 
	
	    return responseData;
	}
  
}
