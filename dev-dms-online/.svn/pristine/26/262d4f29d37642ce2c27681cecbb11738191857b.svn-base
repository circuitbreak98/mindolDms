package dms.nr.nrseabase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]skn물류외입고조회</li>
 * <li>설  명 : </li>
 * <li>작성일 : 2015-09-10 16:00:48</li>
 * <li>작성자 : 장미진 (kuramotojin)</li>
 * </ul>
 *
 * @author 장미진 (kuramotojin)
 */
public class FNREqpTransprotMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNREqpTransprotMgmt(){
		super();
	}

	/**
	 *
	 *
	 * @author 장미진 (kuramotojin)
	 * @since 2015-09-10 17:09:19
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fEqpTransprotSave(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    @SuppressWarnings("unused")
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
	    
	    DNREqpTransportMgmt dNREqpTransprotMgmt = (DNREqpTransportMgmt) lookupDataUnit(DNREqpTransportMgmt.class);
       
	    //1.자산번호가 택배용 회수대상인지 확인
        IDataSet ds = dNREqpTransprotMgmt.dSEqpTransGetAssetNo(reqDs, onlineCtx);
        requestData.putField("ASSET_NO",ds.getField("ASSET_NO"));      	    
       
        //2. 단말기 운송조회정보 번호 채번
	    IDataSet seqNoDs = dNREqpTransprotMgmt.dSEqpTransportSeq(requestData, onlineCtx);
        requestData.putField("EQP_WAYBIL_NO", seqNoDs.getField("EQP_WAYBIL_NO"));
        
        //2. 단말기 운송조회정보 등록
        dNREqpTransprotMgmt.dUEqpTransprotSave(requestData, onlineCtx); //회수테이블 UPDATE
        responseData = dNREqpTransprotMgmt.dIEqpTransportInfoSave(requestData, onlineCtx); 
	    
	
	
	    return responseData;
	}

	/**
	 *
	 *
	 * @author 장미진 (kuramotojin)
	 * @since 2015-09-11 12:23:25
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqEqpTransportLstPaging(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet usrListRs = null;
		int intTotalCnt = 0;

		try {
			// 1. DU lookup
			DNREqpTransportMgmt dNREqpTransportMgmt = (DNREqpTransportMgmt) lookupDataUnit(DNREqpTransportMgmt.class);
			
			// 2. TOTAL COUNT DM호출
			dsCnt = dNREqpTransportMgmt.dSInqEqpTransportLstTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);

			// 3. LISTDM호출
			responseData = dNREqpTransportMgmt.dSInqEqpTransportLstPaging(reqDs, onlineCtx);
			usrListRs = responseData.getRecordSet("RS_TRANSPORT_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(usrListRs, reqDs, intTotalCnt);
			
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}
	
	    return responseData;
	}

	/**
	 *
	 *
	 * @author 장미진 (kuramotojin)
	 * @since 2015-09-11 16:39:33
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fEqpTransportUpdate(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    // 처리 결과값을 responseData에 넣어서 리턴하십시요 
	
	    return responseData;
	}
  
}
