package dms.bi.bibbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/기준정보</li>
 * <li>단위업무명: [FU]거래처관리</li>
 * <li>설  명 : <pre>거래처관리</pre></li>
 * <li>작성일 : 2015-07-03 08:26:12</li>
 * <li>작성자 : 이영진 (newnofixing)</li>
 * </ul>
 *
 * @author 이영진 (newnofixing)
 */
public class FBIDealCoMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FBIDealCoMgmt(){
		super();
	}

	/**
	 * <pre>거래처목록조회</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:26:12
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : DEAL_CO_NM [거래처명]
	 *	- field : DEAL_CO_CL1 [거래처구분]
	 *	- field : DEAL_CO_ST_CD [거래처상태코드]
	 *	- field : BIZ_NUM [사업자번호]
	 *	- field : DEAL_CO_CD [거래처코드]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_DEAL_CO_LIST
	 *		- field : DEAL_CO_CD [거래처코드]
	 *		- field : SEQ [순번]
	 *		- field : DEAL_CO_NM [거래처명]
	 *		- field : DEAL_CO_CL1 [거래처구분1]
	 *		- field : DEAL_CO_CL_NM1 [거래처구분명1]
	 *		- field : DEAL_CO_CL2 [거래처구분2]
	 *		- field : UKEY_AGENCY_CD [UKEY대리점코드]
	 *		- field : BIZ_NUM [사업자번호]
	 *		- field : REP_USER_NM [대표자명]
	 *		- field : BIZ_CON [업태]
	 *		- field : TYP_OF_BIZ [종목]
	 *		- field : ZIP_CD [우편번호]
	 *		- field : ADDR [주소]
	 *		- field : PHON_NUM [전화번호]
	 *		- field : FAX_NO [FAX]
	 *		- field : DEAL_CO_ST_CD [거래처상태코드]
	 *		- field : DEAL_CO_ST_NM [거래처상태명]
	 *		- field : DEAL_STA_DT [거래개시일]
	 *		- field : DEAL_END_DT [거래종료일]
	 *		- field : ORG_ID [소속조직ID]
	 *		- field : SALE_GRP [영업그룹]
	 *		- field : CHRGR_USER_ID [담당사원]
	 *		- field : REP_MBL_PHON [대표이동전화]
	 *		- field : CHRGR1 [담당자1]
	 *		- field : CHRGR_MBL_PHON1 [담당자1이동전화]
	 *		- field : CHRGR2 [담당자2]
	 *		- field : CHRGR_MBL_PHON2 [담당자2이동전화]
	 *		- field : EFF_STA_DTM [유효시작일시]
	 *		- field : EFF_END_DTM [유효종료일시]
	 *		- field : RMK [비고]
	 *		- field : UKEY_SUB_CD [UKEY서브코드]
	 *		- field : UKEY_CHANNEL_CD [UKEY채널코드]
	 *		- field : POS_AGENCY [소속대리점]
	 *		- field : POS_AGENCY_NM [소속대리점명]
	 *		- field : SUP_DEAL [상위거래처]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 */
	public IDataSet fInqDealCoLst(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet usrListRs = null;
		int usrTotalCnt = 0;

		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			
			// 2. TOTAL COUNT DM호출
			dsCnt = dBIDealCoMgmt.dSDealCoTotCnt(requestData, onlineCtx);
			usrTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);

			// 3. LISTDM호출
			responseData = dBIDealCoMgmt.dSDealCoPaging(reqDs, onlineCtx);
			usrListRs = responseData.getRecordSet("RS_DEAL_CO_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(usrListRs, reqDs, usrTotalCnt);
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}

		return responseData;
	}

	/**
	 * <pre>거래처입력</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:30:23
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegDealCo(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			// 2. 업무 DM호출
			responseData = dBIDealCoMgmt.dIDealCo(requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
		return responseData;
	}

	/**
	 * <pre>거래처수정</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:32:32
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdDealCo(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			// 2. 거래처이력생성
			responseData = dBIDealCoMgmt.dIDealCoHist(requestData, onlineCtx);
			// 3. 거래처삭제
            responseData = dBIDealCoMgmt.dDDealCo(requestData, onlineCtx);
            // 3. 거래처등록
            responseData = dBIDealCoMgmt.dIDealCo(requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
		return responseData;
	}
  
}
