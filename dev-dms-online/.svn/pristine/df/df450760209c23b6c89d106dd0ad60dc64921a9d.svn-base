package dms.ep.epbcsbase.biz;

import java.util.Map;

import org.apache.commons.logging.Log;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;
import nexcore.framework.core.log.LogManager;
import nexcore.framework.core.util.StringUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [PU]검수등록</li>
 * <li>설  명 : <pre>[PU]검수등록</pre></li>
 * <li>작성일 : 2015-09-01 13:57:04</li>
 * <li>작성자 : 김윤환 (kyh0904)</li>
 * </ul>
 *
 * @author 김윤환 (kyh0904)
 */
public class PEPTlyReg extends fwk.base.ProcessUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public PEPTlyReg(){
		super();
	}

    /**
	 * <pre>[PM]일반감정검수등록목록조회</pre>
	 *
	 * @author 김윤환 (kyh0904)
	 * @since 2015-09-01 13:57:04
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : CNSL_MGMT_NO [상담관리번호]
	 *	- field : EQP_MDL_CD [단말기모델코드]
	 *	- field : SCRB_MTHD [가입방법]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_TLY_REG_LIST
	 *		- field : CNSL_MGMT_NO [상담 관리 번호]
	 *		- field : EQP_MDL_CD [단말기 모델 코드]
	 *		- field : EQP_MDL_NM [단말기 모델명]
	 *		- field : EQP_SER_NO [단말기 일련 번호]
	 *		- field : CNSL_DT [상담 일자]
	 *		- field : DEAL_CO_NM [상담 거래처명]
	 *		- field : PRCHS_CNSL_DEALCO_NM [매입상담거래처명]
	 *		- field : AGN_ORG_CD [대리점 조직 코드]
	 *		- field : AFFIL_AGN [소속 대리점]
	 *		- field : CNSL_DEALCO_CD [상담 거래처코드]
	 *		- field : CNSL_DEALCO_NM [거래처 명]
	 *		- field : EQP_COLOR_CD [단말기 색상 코드]
	 *		- field : ONING_DT [개통 일자]
	 *		- field : EQP_ST [단말기 상태]
	 *		- field : EQP_ST_DTAIL [단말기 상태 세부]
	 *		- field : EQP_ST_TXT [단말기 상태 내용]
	 *		- field : USE_PRD_DDCT_AMT [사용 기간 차감 금액]
	 *		- field : INR_CORR_YN [내부 부식 여부]
	 *		- field : PWR_SYS [전원 시스템]
	 *		- field : CALL_QULT_TEST [통화 품질 테스트]
	 *		- field : DATA_PRFM [DATA 성능]
	 *		- field : SCRN_TEST [화면 테스트]
	 *		- field : FUNC_TEST [기능 테스트]
	 *		- field : LOSS_EQP_YN [분실 단말기 여부]
	 *		- field : RWD_RTN_OBJ_YN [보상 반납 대상 여부]
	 *		- field : RENTP_YN [임대폰 여부]
	 *		- field : WET_YN [침수 여부]
	 *		- field : USIM_EQPCHG_YN [USIM 기변 여부]
	 *		- field : OTHRCO_FORGN_EQP_YN [타사 해외 단말기 여부]
	 *		- field : EVALCNSLR_AUTCT_YN [평가원 인증 여부]
	 *		- field : FULLSET_YN [FULLSET 여부]
	 *		- field : CON_AMT [매입 금액]
	 *		- field : CNSL_AMT [상담 금액]
	 *		- field : PRCH_CL [매입 구]
	 *		- field : CTZ_NO [주민 번호]
	 *		- field : DPSTR [예금주]
	 *		- field : BANK_CD [은행 코드]
	 *		- field : ACCO_NO [계좌 번호]
	 *		- field : TEL_NO [전화 번호]
	 *		- field : ZIPCD_1 [우편번호 1]
	 *		- field : ZIPCD_2 [우편번호 2]
	 *		- field : ADDR [주소]
	 *		- field : ETC_ADDR [기타 주소]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : USER_NM [최종변경자]
	 *		- field : PRCH_MGMT_NO [매입 관리 번호]
	 *		- field : EVALCNSLR_SUGG [평가원 의견]
	 *		- field : ADJ_AMT [조정 금액]
	 *		- field : FEE_DEDC_YN [요금 공제 여부]
	 *		- field : SVC_NO [서비스 번호]
	 *		- field : SVC_MGMT_NO [서비스 관리 번호]
	 *		- field : IMEI [IMEI]
	 *		- field : ETC_CMPT [기타 구성품]
	 *		- field : PRC_GB [필드4]
	 *		- field : RETUR_DEALCO_CL [반송 거래처 구분]
	 *		- field : CUST_IDEA [고객 의사]
	 *		- field : AMT_RMT_YN [금액 송금 여부]
	 *		- field : UPDATE_COUNT [UPDATE_COUNT]
	 *		- field : POLY_OBJ_YN [정책 대상 여부]
	 *		- field : POLY_OBJ_CD [정책 대상 코드]
	 *		- field : PROGR_ST [진행상태]
	 *		- field : BOX_NO [박스 번호]
	 *		- field : SKN_CL [SKN 구분]
	 *		- field : SKN_EQP_ST [SKN 단말기 상태]
	 *		- field : SKN_JDG_AMT [KN 감정 금액]
	 *		- field : SKN_JDG_CL [SKN 감정 구분]
	 *		- field : SKN_SMPL_JDG_DAMT [SKN 샘플 감정 차액]
	 *		- field : PRE_DC_CL [선 할인 구분]
	 *		- field : SCRN_AFIMG_YN [화면 잔상 여부]
	 *		- field : STRD_INCEN [기준 인센티브]
	 *		- field : FST_RGSTR [최초 등록자]
	 *		- field : ASIANA_CARD_NO [아시아나 카드 번호]
	 *		- field : SCRB_MTHD [가입 방법]
	 *		- field : SELL_GRADE [판매등급]
	 *	- record : RS_TLY_REG_CMPT_LIST
	 *		- field : EQP_MDL_CD [단말기 모델 코드]
	 *		- field : OUTS_MCN_CL [주변 기기 구분]
	 *		- field : QTY [수량]
	 *		- field : UPRC [단가]
	 *		- field : UNIT_UPRC [필드1]
	 *		- field : SALE_UPRC [매출 단가]
	 *		- field : NORM_QTY [정상 수량]
	 *		- field : HLD_QTY [보유 수량]
	 *		- field : SKN_SMPL_QTY [SKN 샘플 수량]
	 *		- field : DDCT_AMT [차감 금액]
	 *		- field : CNSL_SER_NO [상담 일련 번호]
	 *		- field : PRCH_SER_NO [매입 일련 번호]
	 *		- field : LAUNC_DT [출시일자]
	 *		- field : PRCHS_MGMT_NO [매입관리번호]
	 *		- field : CNSL_MGMT_NO [상담 관리 번호]
	 *		- field : BATR_CD [배터리 코드]
	 *		- field : PROD_CL [상품 구분]
	 * </pre>
	 */
	public IDataSet pSGnrlJdgTlyRegLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    Log logger = LogManager.getFwkLog();
        IDataSet responseData = new DataSet();
        String scrbMthd = "";   // 가입방법
        try {            
            if (logger.isDebugEnabled()) {                
                logger.debug("***** 상담 관리 번호 =>> " +StringUtils.nvlObject(requestData.getField("CNSL_MGMT_NO"),"")+"\n");    
                logger.debug("***** 단말기모델코드 =>> " +StringUtils.nvlObject(requestData.getField("EQP_MDL_CD"),"")+"\n");
                logger.debug("***** 가입방법 =>> " +StringUtils.nvlObject(requestData.getField("SCRB_MTHD"),"")+"\n");
            }
            scrbMthd = StringUtils.nvlObject(requestData.getField("SCRB_MTHD"),""); // 가입방법
            
            if("P".equals(scrbMthd) || "C".equals(scrbMthd) || "S".equals(scrbMthd)){
                // 가입방법이 P, C, S인 경우                                
                responseData.putRecordSet(callSharedBizComponentByDirect("ep.EPSCSBase", "fSEqpchgGnrlJdgTlyRegLst", requestData, onlineCtx).getRecordSet("RS_TLY_REG_LIST"));
                responseData.putRecordSet(callSharedBizComponentByDirect("ep.EPSCSBase", "fSEqpchgGnrlJdgTlyRegCmptLst", requestData, onlineCtx).getRecordSet("RS_TLY_REG_CMPT_LIST"));                
            }else{
                // 가입방법이 그이외인 경우   
                responseData.putRecordSet(callSharedBizComponentByDirect("ep.EPSCSBase", "fSNewGnrlJdgTlyRegLst", requestData, onlineCtx).getRecordSet("RS_TLY_REG_LIST"));
                responseData.putRecordSet(callSharedBizComponentByDirect("ep.EPSCSBase", "fSNewGnrlJdgTlyRegCmptLst", requestData, onlineCtx).getRecordSet("RS_TLY_REG_CMPT_LIST"));
            }
        
        } catch ( BizRuntimeException e ) {
            throw e;
        } catch ( Exception e ) {
            throw new BizRuntimeException("DMS00009", e); // 시스템 오류가 발생하였습니다.
        }
        
        // 2. 결과값 리턴        
        responseData.setOkResultMessage("DMS00001", null); // 정상 조회되었습니다.
        
        return responseData;
    }
  
}
