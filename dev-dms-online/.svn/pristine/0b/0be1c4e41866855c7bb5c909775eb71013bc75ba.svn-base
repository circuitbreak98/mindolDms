package dms.pr.prbpmbase.biz;

import java.util.Map;

import fwk.common.CommonArea;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/임대R</li>
 * <li>단위업무명: [PU]단말기입고관리</li>
 * <li>설  명 : <pre>단말기입고관리PU</pre></li>
 * <li>작성일 : 2015-07-10 11:29:30</li>
 * <li>작성자 : 김상오 (myneti99)</li>
 * </ul>
 *
 * @author 김상오 (myneti99)
 */
public class PPREqpReqpInMgmt extends fwk.base.ProcessUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public PPREqpReqpInMgmt(){

		super();
	}

	/**
	 * <pre>단말기입고등록</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-07-10 11:29:30
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RQ_EQP_LIST
	 *		- field : FST_IN_DT [입고일자]
	 *		- field : IN_PLC_CD [매입처코드]
	 *		- field : ASSET_NUM [자산번호]
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : EQP_SER_NUM [일련번호]
	 *		- field : EQP_COLOR_CD [색상코드]
	 *		- field : DEPT_CD [담당부서코드]
	 *		- field : PRCH_AMT [매입단가]
	 *		- field : EQP_IMEI_NUM [IMEI]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 *		- field : EQP_IN_NUM [단말기입고번호]
	 *		- field : BOX_NO [BOX NO]
	 *		- field : OP_CL_CD [업무구분코드]
	 *		- field : INVE_ST_CD [재고상태코드]
	 *	- record : CMPT_OUT
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : EQP_SER_NUM [일련번호]
	 *		- field : CMPT_CD [구성품코드]
	 *		- field : OUT_YN [구성품출고여부]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet pSaveEqpReqpIn(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    IRecordSet rs = requestData.getRecordSet("RQ_EQP_LIST");
	    CommonArea ca = getCommonArea(onlineCtx);

		try {
			// 1. FU lookup
			//FPREqpReqpInMgmt fPREqpReqpInMgmt = (FPREqpReqpInMgmt) lookupFunctionUnit(FPREqpReqpInMgmt.class);
			// 2. 입력 RS설정(단건)
			//requestData.putFieldMap(requestData.getRecordSet("RQ_EQP_LIST").getRecordMap(0));
			//requestData.putField("FS_REG_USER_ID", ca.getUserNo());
			//requestData.putField("LS_CHG_USER_ID", ca.getUserNo());
			//requestData.putField("DEL_YN", "N");
			
			// 3. 레코드셋 상태에 따른 분기
			for (int i=0; i<rs.getRecordCount(); i++) {
				requestData.putFieldMap(rs.getRecordMap(i));
				requestData.putField("FS_REG_USER_ID", ca.getUserNo());
				requestData.putField("LS_CHG_USER_ID", ca.getUserNo());
				if ( "I".equals(ca.getTrnPtrnDvcd()) ) { // INSERT
					//fPREqpReqpInMgmt.fRegEqpReqpIn(requestData, onlineCtx);
					callSharedBizComponentByDirect("pr.PRSPMBase", "fRegEqpReqpIn", requestData, onlineCtx);
				} /*else if ( "U".equals(ca.getTrnPtrnDvcd()) ) { // UPDATE
					fPREqpReqpInMgmt.fRegEqpReqpIn(requestData, onlineCtx);
				} else if ( "D".equals(ca.getTrnPtrnDvcd()) ) { // DELETE
					fPREqpReqpInMgmt.fRegEqpReqpIn(requestData, onlineCtx);
				}*/
			}
		} catch ( BizRuntimeException e ) {
			throw e;
		} catch ( Exception e ) {
			throw new BizRuntimeException("DMS00009", e); // 시스템 오류가 발생하였습니다.
		}
		// 4. 결과값 리턴
		responseData.setOkResultMessage("DMS00000", null); //정상 처리되었습니다.
	    return responseData;
	}

	/**
	 * <pre>단말기입고조회</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-07-10 11:29:30
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : IN_FR_DT [입고시작일자]
	 *	- field : IN_TO_DT [입고종료일자]
	 *	- field : IN_PLC_CD [매입처코드]
	 *	- field : EQP_MDL_CD [모델코드]
	 *	- field : BOX_NO [박스NO]
	 *	- field : INVE_ST_CD [상태]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_REQP_IN_LIST
	 *		- field : IN_DT [입고일자]
	 *		- field : IN_PLC_CD [매입처코드]
	 *		- field : DEAL_CO_NM [매입처명]
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : EQP_MDL_NM [모델명]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : SUM_QTY [수량]
	 *		- field : SUM_AMT [매입금액]
	 * </pre>
	 */
	public IDataSet pInqEqpReqpInLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    try {
            // 1. FU lookup
	        //FPREqpReqpInMgmt fPREqpReqpInMgmt = (FPREqpReqpInMgmt) lookupFunctionUnit(FPREqpReqpInMgmt.class);
            // 2. FM 호출
            responseData = callSharedBizComponentByDirect("pr.PRSPMBase", "fInqEqpReqpInLst", requestData, onlineCtx);
            // 3. 결과값 리턴
            responseData.setOkResultMessage("DMS00001", null); //정상 조회되었습니다.
        } catch ( BizRuntimeException e ) {
            throw e;
        } catch ( Exception e ) {
            throw new BizRuntimeException("DMS00009", e); //시스템 오류
        }
        return responseData;
	}

	/**
	 * <pre>단말기입고상세조회</pre>
	 *
	 * @author 김상오 (myneti99)
	 * @since 2015-07-10 11:29:30
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : IN_DT [입고일자]
	 *	- field : IN_PLC_CD [매입처코드]
	 *	- field : EQP_MDL_CD [모델코드]
	 *	- field : EQP_COLOR_CD [색상]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_EQP_REQP_IN_DTL
	 *		- field : IN_DT [입고일자]
	 *		- field : ASSET_NUM [자산번호]
	 *		- field : DEAL_CO_NM [매입처명]
	 *		- field : EQP_MDL_NM [모델명]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : PRCH_AMT [매입단가]
	 *		- field : EQP_SER_NUM [일련번호]
	 *		- field : EQP_IMEI_NUM [IMEI번호]
	 *		- field : INVE_ST_CD [상태]
	 * </pre>
	 */
	public IDataSet pInqEqpReqpInDtlLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    try {
            // 1. FU lookup
            //FPREqpReqpInMgmt fPREqpReqpInMgmt = (FPREqpReqpInMgmt) lookupFunctionUnit(FPREqpReqpInMgmt.class);
            // 2. FM 호출
            responseData = callSharedBizComponentByDirect("pr.PRSPMBase", "fInqEqpReqpInDtlLst", requestData, onlineCtx);
            // 3. 결과값 리턴
            responseData.setOkResultMessage("DMS00001", null); //정상 조회되었습니다.
        } catch ( BizRuntimeException e ) {
            throw e;
        } catch ( Exception e ) {
            throw new BizRuntimeException("DMS00009", e); //시스템 오류
        }
	    return responseData;
	}
  
}
