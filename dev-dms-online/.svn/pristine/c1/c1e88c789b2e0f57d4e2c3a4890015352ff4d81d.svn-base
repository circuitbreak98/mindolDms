package dms.nr.nrsxmbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]손해배상금정상정보관리</li>
 * <li>설  명 : </li>
 * <li>작성일 : 2015-08-10 14:00:50</li>
 * <li>작성자 : 정동현 (jjddhh123)</li>
 * </ul>
 *
 * @author 정동현 (jjddhh123)
 */
public class FNRCmpXclMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRCmpXclMgmt(){
		super();
	}

    /**
	 * <pre>손해배상금정산정보조회</pre>
	 *
	 * @author 정동현 (jjddhh123)
	 * @since 2015-08-10 14:00:50
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : XCL_YM [정산년월]
	 *	- field : EQP_MDL_CD [단말기모델코드]
	 *	- field : EQP_MDL_NM [단말기모델명]
	 *	- field : EQP_JDG_RSLT_CD [손해배상금유형]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_CMP_XCL_LST
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_MDL_NM [단말기모델명]
	 *		- field : EQP_CMP_AMT_TOT [DMS금액]
	 *		- field : OP_PROC_DT [업무처리일자]
	 * </pre>
	 */
	public IDataSet fInqCmpXclLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
        IRecordSet agnSellComLstRs = null;
        int intTotalCnt = 0;
        try {
            // 1. DU lookup
            DNRCmpXclMgmt dNRCmpXclMgmt = (DNRCmpXclMgmt) lookupDataUnit(DNRCmpXclMgmt.class);
                
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRCmpXclMgmt.dSCmpXclLstTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(reqDs);
            // 3. LISTDM호출
            responseData = dNRCmpXclMgmt.dSCmpXclLstPaging(reqDs, onlineCtx);
            agnSellComLstRs = responseData.getRecordSet("RS_CMP_XCL_LST");
            PagenateUtils.setPagenatedParamToRecordSet(agnSellComLstRs, reqDs, intTotalCnt);
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
    
        return responseData;
    }

    /**
	 * <pre>손해배상금정산정보상세</pre>
	 *
	 * @author 정동현 (jjddhh123)
	 * @since 2015-08-10 14:00:50
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : XCL [정산년월]
	 *	- field : EQP_MDL_CD [단말기모델코드]
	 *	- field : EQP_MDL_NM [단말기모델명]
	 *	- field : EQP_JDG_RSLT_CD [손해배상금유형]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_CMP_XCL_DTL
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : EQP_MDL_NM [단말기모델명]
	 *		- field : EQP_CMP_AMT_TOT [DMS금액]
	 *		- field : OP_PROC_DT [업무처리일자]
	 *		- field : SVC_MGMTNO [서비스관리번호]
	 *		- field : SVC_NO [이동전화번호]
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : EQP_IN_DT [단말기입고일자]
	 *		- field : JDG_ARRV_DT [감정승인일자]
	 *		- field : EQP_JDG_RSLT_CD [감정결과코드]
	 *		- field : RENTAL_CNTRT_STA_DT [렌탈계약시작일자]
	 *		- field : RENTAL_CNTRT_END_DT [렌탈계약종료일자]
	 * </pre>
	 */
	public IDataSet fInqCmpXclDtl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
        IRecordSet agnSellComLstRs = null;
        int intTotalCnt = 0;
          
        try {
            // 1. DU lookup
            DNRCmpXclMgmt dNRCmpXclMgmt = (DNRCmpXclMgmt) lookupDataUnit(DNRCmpXclMgmt.class);
                
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRCmpXclMgmt.dSCmpXclDtlTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(reqDs);
            // 3. LISTDM호출
            responseData = dNRCmpXclMgmt.dSCmpXclDtlPaging(reqDs, onlineCtx);
            agnSellComLstRs = responseData.getRecordSet("RS_CMP_XCL_DTL");
            PagenateUtils.setPagenatedParamToRecordSet(agnSellComLstRs, reqDs, intTotalCnt);
            
        } catch ( BizRuntimeException e ) {
            throw e; //시스템 오류가 발생하였습니다.
        }
    
        return responseData;
    }
  
}
