package dms.ep.epsfsbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [DU]FPA판매대행상품판매관리</li>
 * <li>설  명 : <pre>FPA판매대행상품판매관리 DU</pre></li>
 * <li>작성일 : 2016-02-18 10:05:07</li>
 * <li>작성자 : 이민재 (mindol1004)</li>
 * </ul>
 *
 * @author 이민재 (mindol1004)
 */
public class DEPFPAProxySaleMgmt extends fwk.base.DataUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public DEPFPAProxySaleMgmt(){
		super();
	}

    /**
	 * <pre>FPA판매대행상품판매관리조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:10:20
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleList(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        IRecordSet rsReturn = dbSelect("SFpaProxySaleList", requestData, onlineCtx);
        // 2.결과값 셋팅
        responseData.putRecordSet("RS_FPA_SALE_LIST", rsReturn);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매등록상세조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:10:53
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleMasterDtl(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        IRecordSet rsReturn = dbSelect("SFpaProxySaleMasterDtl", requestData, onlineCtx);
        // 2.결과값 셋팅
        responseData.putRecordSet("RS_FPA_MASTER_DTL", rsReturn);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매등록상세조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:11:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleItemDtl(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        IRecordSet rsReturn = dbSelect("SFpaProxySaleItemDtl", requestData, onlineCtx);
        // 2.결과값 셋팅
        responseData.putRecordSet("RS_FPA_ITEM_DTL", rsReturn);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매번호채번</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:11:53
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleGnrlNo(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출     
        IRecord record = dbSelectSingle("SFpaProxySaleGnrlNo", requestData, onlineCtx);
        // 2.결과값 셋팅     
        responseData.putFieldMap(record);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매변경순번채번</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:12:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleGnrlChgNo(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출     
        IRecord record = dbSelectSingle("SFpaProxySaleGnrlChgNo", requestData, onlineCtx);
        // 2.결과값 셋팅     
        responseData.putFieldMap(record); 
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매단말기판매순번채번</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:12:49
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleEquipmentSellSeq(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출     
        IRecord record = dbSelectSingle("SFpaProxySaleEquipmentSellSeq", requestData, onlineCtx);
        // 2.결과값 셋팅     
        responseData.putFieldMap(record);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매등록일반판매저장</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:13:23
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dIFpaProxyGnrlSale(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        dbInsert("IFpaProxyGnrlSale", requestData, onlineCtx);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매등록단말기판매저장</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:17:10
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dIFpaProxySaleEquipment(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        
        final IRecordSet recordSet = requestData.getRecordSet("RS_SALE_LIST");
        
        // SQL 배치 모드 실행
        long totalCount = dbExecuteBatch(new DbBatchModeExecutor(1000) {
            
            @Override
            protected void execute() {
                
                for(int i=0; i<recordSet.getRecordCount(); i++){
                    addBatch("IFpaProxySaleEquipment", recordSet.getRecord(i));
                }
                
            }
            
        }, onlineCtx);
        
        responseData.putField("totalCount", totalCount);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행재고상품총건수</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:17:40
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleDisTotCnt(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출     
        IRecord record = dbSelectSingle("SFpaProxySaleDisTotCnt", requestData, onlineCtx);
        // 2.결과값 셋팅     
        responseData.putFieldMap(record); 
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행재고상품조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:18:06
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleDisLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        IRecordSet rsReturn = dbSelect("SFpaProxySaleDisLst", requestData, onlineCtx);
        // 2.결과값 셋팅
        responseData.putRecordSet("RS_FPA_DIS_LIST", rsReturn); 
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행단말기판매정보수정</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:18:33
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dUFpaProxyEqpMgmt(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
        
        final IRecordSet recordSet = requestData.getRecordSet("RS_SALE_LIST");
        
        // SQL 배치 모드 실행
        long totalCount = dbExecuteBatch(new DbBatchModeExecutor(1000) {
            
            @Override
            protected void execute() {
                
                for(int i=0; i<recordSet.getRecordCount(); i++){
                    addBatch("UFpaProxyEqpMgmt", recordSet.getRecord(i));
                }
                
            }
            
        }, onlineCtx);
        
        responseData.putField("totalCount", totalCount);
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매재고조회총건수</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:19:04
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleDisListTotCnt(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출     
        IRecord record = dbSelectSingle("SFpaProxySaleDisListTotCnt", requestData, onlineCtx);
        // 2.결과값 셋팅     
        responseData.putFieldMap(record); 
    
        return responseData;
    }

    /**
	 * <pre>FPA판매대행상품판매재고조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2016-02-18 10:19:29
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet dSFpaProxySaleDisListPaging(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
    
        // 1.쿼리문 호출
        IRecordSet rsReturn = dbSelect("SFpaProxySaleDisListPaging", requestData, onlineCtx);
        // 2.결과값 셋팅
        responseData.putRecordSet("RS_FPA_SALE_DIS_LIST", rsReturn); 
    
        return responseData;
    }
  
}
