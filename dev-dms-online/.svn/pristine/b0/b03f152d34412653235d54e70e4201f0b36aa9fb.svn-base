package dms.nr.nrsxmbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]대리점판매수수료정산관리</li>
 * <li>설  명 : <pre>대리점판매수수료정산관리</pre></li>
 * <li>작성일 : 2015-08-05 10:38:52</li>
 * <li>작성자 : 정동현 (jjddhh123)</li>
 * </ul>
 *
 * @author 정동현 (jjddhh123)
 */
public class FNRAgnSellComMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRAgnSellComMgmt(){
		super();
	}

	/**
	 * <pre>대리점판매수수료정산정보조회</pre>
	 *
	 * @author 정동현 (jjddhh123)
	 * @since 2015-08-05 10:38:52
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : XCL_YM [정산년월]
	 *	- field : AGN_CD [대리점코드]
	 *	- field : AGN_NM [대리점명]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_AGN_SELL_COM_LST
	 *		- field : AGN_CD [대리점코드]
	 *		- field : AGN_NM [대리점명]
	 *		- field : SALE_CNT [판매대수]
	 *		- field : CMMS_CMMS [수수료]
	 *		- field : SLIP_NUM [전표번호]
	 *		- field : CNCL_SLIP [취소전표]
	 *		- field : XCL_YM [판매정산년월]
	 * </pre>
	 */
	public IDataSet fInqAgnSellComLst(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet agnSellComLstRs = null;
		int intTotalCnt = 0;
		  
		try {
			// 1. DU lookup
			DNRAgnSellComMgmt dNRAgnSellComMgmt = (DNRAgnSellComMgmt) lookupDataUnit(DNRAgnSellComMgmt.class);
				
			// 2. TOTAL COUNT DM호출
			dsCnt = dNRAgnSellComMgmt.dSAgnSellComLstTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);
			// 3. LISTDM호출
			responseData = dNRAgnSellComMgmt.dSAgnSellComLstPaging(reqDs, onlineCtx);
			agnSellComLstRs = responseData.getRecordSet("RS_AGN_SELL_COM_LST");
			PagenateUtils.setPagenatedParamToRecordSet(agnSellComLstRs, reqDs, intTotalCnt);
			
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}
	
	    return responseData;
	}

	/**
	 * <pre>대리점판매수수료정산상세 조회</pre>
	 *
	 * @author 정동현 (jjddhh123)
	 * @since 2015-08-05 10:38:52
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : XCL_YY [정산년]
	 *	- field : XCL_MTH [정산월]
	 *	- field : AGN_CD [대리점코드]
	 *	- field : AGN_NM [대리점명]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_CNTRT_PRST_LIST
	 *		- field : AGN_CD [대리점코드]
	 *		- field : AGN_NM [대리점명]
	 *		- field : SALE_CNT [판매대수]
	 *		- field : CMMS_CMMS [수수료]
	 *		- field : SLIP_NUM [전표번호]
	 *		- field : CNCL_SLIP [취소전표]
	 *		- field : XCL_YM [정산년월]
	 * </pre>
	 */
	public IDataSet fInqAgnSellComDtl(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet agnSellComLstRs = null;
		int intTotalCnt = 0;
		  
		try {
			// 1. DU lookup
			DNRAgnSellComMgmt dNRAgnSellComMgmt = (DNRAgnSellComMgmt) lookupDataUnit(DNRAgnSellComMgmt.class);
				
			// 2. TOTAL COUNT DM호출
			dsCnt = dNRAgnSellComMgmt.dSAgnSellComDtlTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);
			// 3. LISTDM호출
			responseData = dNRAgnSellComMgmt.dSAgnSellComDtlPaging(reqDs, onlineCtx);
			agnSellComLstRs = responseData.getRecordSet("RS_AGN_SELL_COM_DTL");
			PagenateUtils.setPagenatedParamToRecordSet(agnSellComLstRs, reqDs, intTotalCnt);
			
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}
	
	    return responseData;
	}
  
}
