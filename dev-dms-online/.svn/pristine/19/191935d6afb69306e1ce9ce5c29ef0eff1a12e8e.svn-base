package dms.nr.nrseabase.biz;

import java.util.Map;

import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.RecordSet;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]매입정보관리</li>
 * <li>설  명 : <pre>매입정보관리FU</pre></li>
 * <li>작성일 : 2015-07-17 15:37:15</li>
 * <li>작성자 : 이민재 (mindol1004)</li>
 * </ul>
 *
 * @author 이민재 (mindol1004)
 */
public class FNRPrchInfoMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRPrchInfoMgmt(){
		super();
	}

	/**
	 * <pre>매입정보 페이징 조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2015-07-17 15:37:15
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqPrchInfoLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    IDataSet dsCnt = new DataSet();
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;
        String sSumOutPrc;
        
        try {
            // 1. DU lookup
            DNRPrchInfoMgmt dNRPrchInfoMgmt = (DNRPrchInfoMgmt) lookupDataUnit(DNRPrchInfoMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRPrchInfoMgmt.dSPrchInfoTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            sSumOutPrc = dsCnt.getField("SUM_OUT_PRC");
            
            PagenateUtils.setPagenatedParamsToDataSet(requestData);
            // 3. LISTDM호출
            responseData = dNRPrchInfoMgmt.dSPrchInfoLstPaging(requestData, onlineCtx);
            rsPagingList = responseData.getRecordSet("RS_PRCH_PG");
            // 4. 첫번째 ROW CNTRT_YM에 SUM PRC 세팅
            if(rsPagingList.getRecordCount() > 0) {
                rsPagingList.getRecord(0).set("SUM_PRC", sSumOutPrc);
            }
            
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
	    return responseData;
	}

	/**
	 * <pre>매입정보상세조회</pre>
	 *
	 * @author 이민재 (mindol1004)
	 * @since 2015-07-17 15:40:46
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqPrchInfoDtl(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    // 처리 결과값을 responseData에 넣어서 리턴하십시요 
	
	    return responseData;
	}

    /**
	 * <pre>매입정보 리스트 모두조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-24 15:54:43
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqAllPrchInfoLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DNRPrchInfoMgmt dNRPrchInfoMgmt = (DNRPrchInfoMgmt) lookupDataUnit(DNRPrchInfoMgmt.class);
            // 3. LISTDM호출 (RS_SKN_DTL_LST)
            responseData = dNRPrchInfoMgmt.dSPrchInfoLst(requestData, onlineCtx);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }
  
}
