package dms.pr.prspmbase.biz;

import java.util.Map;

import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/임대R</li>
 * <li>단위업무명: [FU]구성품입고관리</li>
 * <li>설  명 : <pre>구성품입고관리FU</pre></li>
 * <li>작성일 : 2015-07-10 09:27:38</li>
 * <li>작성자 : 박민정 (dangnagu2)</li>
 * </ul>
 *
 * @author 박민정 (dangnagu2)
 */
public class FPRConstInMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FPRConstInMgmt(){
		super();
	}

	/**
	 * <pre>구성품입고조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-16 13:35:50
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : STA_IN_DT [조회입고시작일]
	 *	- field : END_IN_DT [조회입고종료일]
	 *	- field : PRCHCO_CD [매입처코드]
	 *	- field : PRCHCO_NM [매입처명]
	 *	- field : CMPT_CD [구성품코드]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_CMPT_IN_LIST
	 *		- field : CMPT_CD [구성품코드]
	 *		- field : PRCHCO_CD [매입처코드]
	 *		- field : CMPT_IN_DT [구성품입고일자]
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : CMPT_PRCH_QTY [구성품매입수량]
	 *		- field : CMPT_PRCH_UPRC [구성품매입단가]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 *		- field : PRCH_CO_NM [매입처명]
	 *		- field : EQP_MDL_NM [단말기모델명]
	 * </pre>
	 */
	public IDataSet fInqConstInLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    IDataSet dsCnt = new DataSet();
		IRecordSet rsPagingList = null;
		int intTotalCnt = 0;

		try {
			// 1. DU lookup
			DPRConstInMgmt dPRConstInMgmt = (DPRConstInMgmt) lookupDataUnit(DPRConstInMgmt.class);
			// 2. TOTAL COUNT DM호출
			dsCnt = dPRConstInMgmt.dSConstInLstTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(requestData);

			// 3. LISTDM호출
			responseData = dPRConstInMgmt.dSConstInLstPaging(requestData, onlineCtx);
			rsPagingList = responseData.getRecordSet("RS_CMPT_IN_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
	    return responseData;
	}

	/**
	 *
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-16 13:35:50
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RS_CONST_IN_LIST
	 *		- field : CMPT_IN_NO [구성품입고번호]
	 *		- field : CMPT_IN_DT [구성품입고일자]
	 *		- field : PRCHCO_CD [매입처코드]
	 *		- field : EQP_MDL_CD [단말기모델코드]
	 *		- field : CMPT_CD [구성품코드]
	 *		- field : CMPT_PRCH_QTY [구성품매입수량]
	 *		- field : CMPT_PRCH_UPRC [구성품매입단가]
	 *		- field : DEL_YN [삭제여부]
	 *		- field : FS_REG_USER_ID [최초등록사용자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경사용자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegConstIn(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    try {
			// 1. DU lookup
	    	DPRConstInMgmt dPRConstInMgmt = (DPRConstInMgmt) lookupDataUnit(DPRConstInMgmt.class);
			
	    	// 2. Validation DM호출
			//IDataSet valDS = dPRConstInMgmt.dSConstInChk(requestData, onlineCtx);
			/*if ( Integer.parseInt(valDS.getField("ROW_CNT")) > 0 ) {
				throw new BizRuntimeException("DMS00003"); //중복입력 된 데이터가 존재합니다.
			}*/
			//구성품일련번호조회
			IDataSet valDS = dPRConstInMgmt.dSConstInNum(requestData, onlineCtx);
			requestData.putField("CMPT_IN_NO", valDS.getField("CMPT_IN_NO"));

			// 3. 업무 DM호출 구성품입고입력
			responseData = dPRConstInMgmt.dIConstIn(requestData, onlineCtx);

		} catch ( BizRuntimeException e ) {
			throw e;
		}
	
	    return responseData;
	}
  
}
