package dms.ep.epscsbase.biz;

import java.util.Map;

import fwk.common.CommonArea;
import fwk.utils.HpcUtils;
import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/에코폰</li>
 * <li>단위업무명: [FU]입금관리</li>
 * <li>설  명 : <pre>입금관리</pre></li>
 * <li>작성일 : 2015-09-15 18:48:39</li>
 * <li>작성자 : 양재석 (jsyang)</li>
 * </ul>
 *
 * @author 양재석 (jsyang)
 */
public class FEPDpstMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FEPDpstMgmt(){
		super();
	}

    /**
	 * <pre>송금대상조회</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-09-15 18:48:39
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : IN_FR_DT [조회시작일자]
	 *	- field : IN_TO_DT [조회종료일자]
	 *	- field : AFFIL_AGN [대리점거래처코드]
	 *	- field : CNSL_DEALCO_CD [상담처코드]
	 *	- field : EQP_SER_NO [단말기일련번호]
	 *	- field : EQP_MDL_CD [모델코드]
	 *	- field : DPSTR_ENPT [예금주_암호화]
	 *	- field : CNSL_MGMT_NO [상담관리번호]
	 *	- field : BOX_NO [박스번호]
	 *	- field : DT_GB_CD [일자구분]
	 *	- field : ECO_FU_YN [에코4U여부]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : SEND_AMT_OBJ_LIST
	 *		- field : PRCH_MGMT_NO [매입 관리 번호]
	 *		- field : CNSL_MGMT_NO [상담 관리 번호]
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : EQP_SER_NO [단말기일련번호]
	 *		- field : PRCH_DT [매입 일자]
	 *		- field : CNSL_DT [상담 일자]
	 *		- field : EQP_COLOR_CD [단말기색상코드]
	 *		- field : HEADQ_NM [본부 명]
	 *		- field : MKT_TEAM_CD [마케팅 팀 코드]
	 *		- field : MKT_TEAM_NM [마케팅 팀 명]
	 *		- field : AGN_ORG_CD [대리점 조직 코드]
	 *		- field : UKEY_SUB_CD [UKEY 서브 코드]
	 *		- field : CNSL_DEALCO_NM [상담처명]
	 *		- field : AFFIL_AGN_NM [대리점명]
	 *		- field : CNSL_DEALCO_CD [상담처코드]
	 *		- field : EQP_MDL_NM [모델명]
	 *		- field : PRCH_AMT [매입금액]
	 *		- field : BANK_CD [은행코드]
	 *		- field : ACCO_NO [계좌번호]
	 *		- field : DPSTR [예금주]
	 *		- field : AMT_RMT_YN [금액 송금 여부]
	 *		- field : RMT_DT [송금 일자]
	 *		- field : EQP_ST [단말기 상태]
	 *		- field : EQP_ST_DTAIL [단말기 상태 세부]
	 *		- field : AFFIL_AGN [소속 대리점]
	 *		- field : PRE_DC_CL [선 할인 구분]
	 *		- field : UBO_AMT [유보금액]
	 *		- field : TOT_AMT [총금액]
	 *		- field : CUST_GRP [고객 그룹]
	 *		- field : CHECKED [CHECKED]
	 *		- field : ACCO_NO_ENPT [계좌번호_암호화]
	 *		- field : DPSTR_ENPT [예금주_암호화]
	 * </pre>
	 */
	public IDataSet fInqSendAmtObjList(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet responseRegData = new DataSet();
        IDataSet responseDtlData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
        IRecordSet rsPagingList = null;
        IRecordSet rsList = null;
        int intTotalCnt = 0;

        try {
            // 1. DU lookup
            DEPDpstMgmt dEPDpstMgmt = (DEPDpstMgmt) lookupDataUnit(DEPDpstMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dEPDpstMgmt.dSInqSendAmtObjPrchListTotCnt(reqDs, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(reqDs);
            // 3. LISTDM호출
            responseRegData = dEPDpstMgmt.dSInqSendAmtObjPrchListPaging(reqDs, onlineCtx);

            rsList = responseRegData.getRecordSet("SEND_AMT_OBJ_LIST");
            if(intTotalCnt > 0){
                // 4. 상세LISTDM호출
                responseDtlData = dEPDpstMgmt.dSInqSendAmtObjPrchDtlList(reqDs, onlineCtx);
                if(responseDtlData != null && 
                    responseDtlData.getRecordSetCount() > 0 && responseDtlData.getRecordSet("SEND_AMT_OBJ_DTL_LIST") != null){
                    IRecordSet rsTemp = responseDtlData.getRecordSet("SEND_AMT_OBJ_DTL_LIST");
                    for(int i = rsTemp.getRecordCount()-1; i >= 0 ; i--){
                        for(int j = 0; j < rsList.getRecordCount(); j++){
                            if(rsList.get(j, "PRCH_MGMT_NO").equals(rsTemp.get(i, "PRCH_MGMT_NO"))){
                                break;
                            }else if(j == (rsList.getRecordCount() - 1)){
                                rsTemp.removeRecord(i);
                            }
                        }
                    }
                    if(rsTemp != null && rsTemp.getRecordCount() > 0){
                        responseData.putRecordSet("SEND_AMT_OBJ_DTL_LIST", rsTemp);
                    }
                }
                responseData.putRecordSet("SEND_AMT_OBJ_LIST", rsList);
            }else{
                responseData.putRecordSet("SEND_AMT_OBJ_LIST", responseRegData.getRecordSet("SEND_AMT_OBJ_LIST"));
            }
            rsPagingList = responseData.getRecordSet("SEND_AMT_OBJ_LIST");
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, reqDs, intTotalCnt);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
    
        return responseData;
    }

    /**
	 * <pre>송금대상목록에러체크조회</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-09-15 18:48:39
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RQ_SEND_AMT_OBJ_EQP_LIST
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : PROD_NM [모델명]
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : DPSTR [고객명]
	 *		- field : CNSL_DT [상담일자]
	 *		- field : CNSL_DEALCO_CD [상담처코드]
	 *		- field : CON_PLC_NM [상담처명]
	 *		- field : ONING_DT [개통일자]
	 *		- field : EQP_ST [단말기등급]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : LOSS_EQP_YN [분실단말기여부]
	 *		- field : RWD_RTN_OBJ_YN [보상반납대상여부]
	 *		- field : RENTP_YN [임대폰여부]
	 *		- field : USIM_EQPCHG_YN [USIM기변여부]
	 *		- field : OTHRCO_FORGN_EQP_YN [타사/해외단말기여부]
	 *		- field : SVC_NO [서비스번호]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : IMEI [IMEI]
	 *		- field : FEE_DEDC_YN [요금공제여부]
	 *		- field : SKN_JDG_AMT [매입금액]
	 *		- field : PRCH_CL [검수구분]
	 *		- field : TLY_DT [검수일자]
	 *		- field : CUST_IDEA [고객의사]
	 *		- field : CUST_CHK_DT [고객확인일자]
	 *		- field : ACC_NM [예금주]
	 *		- field : BANK_CD [은행코드]
	 *		- field : BANK_NM [은행명]
	 *		- field : ACCO_NO [계좌번호]
	 *		- field : TEL_NO [전화번호]
	 *		- field : ZIPCD_1 [우편번호1]
	 *		- field : ZIPCD_2 [우편번호2]
	 *		- field : ADDR [주소]
	 *		- field : ETC_ADDR [기타주소]
	 *		- field : SUGG [의견]
	 *		- field : T_MGMT_NO [T_관리번호]
	 *		- field : BATTERY [배터리]
	 *		- field : CHARGER [충전기]
	 *		- field : ZENDER [젠더]
	 *		- field : EARPHONES [이어폰]
	 *		- field : CASE [충전 Case]
	 *		- field : USB [USB CABLE]
	 *		- field : MEMORY [메모리카드]
	 *		- field : DTL_1 [구성품_1]
	 *		- field : DTL_2 [구성품_2]
	 *		- field : DTL_3 [구성품_3]
	 *		- field : OTHER [기타구성품]
	 *		- field : SELL_GRADE [판매등급]
	 *		- field : ERR_DESC [ERROR]
	 *		- field : SKN_CL [SKN구분]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_SEND_AMT_OBJ_EQP_LIST
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : PROD_NM [모델명]
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : DPSTR [고객명]
	 *		- field : CNSL_DT [상담일자]
	 *		- field : CNSL_DEALCO_CD [상담처코드]
	 *		- field : CON_PLC_NM [상담처명]
	 *		- field : ONING_DT [개통일자]
	 *		- field : EQP_ST [단말기등급]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : LOSS_EQP_YN [분실단말기여부]
	 *		- field : RWD_RTN_OBJ_YN [보상반납대상여부]
	 *		- field : RENTP_YN [임대폰여부]
	 *		- field : USIM_EQPCHG_YN [USIM기변여부]
	 *		- field : OTHRCO_FORGN_EQP_YN [타사/해외단말기여부]
	 *		- field : SVC_NO [서비스번호]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : IMEI [IMEI]
	 *		- field : FEE_DEDC_YN [요금공제여부]
	 *		- field : SKN_JDG_AMT [매입금액]
	 *		- field : PRCH_CL [검수구분]
	 *		- field : TLY_DT [검수일자]
	 *		- field : CUST_IDEA [고객의사]
	 *		- field : CUST_CHK_DT [고객확인일자]
	 *		- field : ACC_NM [예금주]
	 *		- field : BANK_CD [은행코드]
	 *		- field : BANK_NM [은행명]
	 *		- field : ACCO_NO [계좌번호]
	 *		- field : TEL_NO [전화번호]
	 *		- field : ZIPCD_1 [우편번호1]
	 *		- field : ZIPCD_2 [우편번호2]
	 *		- field : ADDR [주소]
	 *		- field : ETC_ADDR [기타주소]
	 *		- field : SUGG [의견]
	 *		- field : T_MGMT_NO [T_관리번호]
	 *		- field : BATTERY [배터리]
	 *		- field : CHARGER [충전기]
	 *		- field : ZENDER [젠더]
	 *		- field : EARPHONES [이어폰]
	 *		- field : CASE [충전 Case]
	 *		- field : USB [USB CABLE]
	 *		- field : MEMORY [메모리카드]
	 *		- field : DTL_1 [구성품_1]
	 *		- field : DTL_2 [구성품_2]
	 *		- field : DTL_3 [구성품_3]
	 *		- field : OTHER [기타구성품]
	 *		- field : SELL_GRADE [판매등급]
	 *		- field : ERR_DESC [ERROR]
	 *		- field : SKN_CL [SKN구분]
	 * </pre>
	 */
	public IDataSet fInqSendAmtObjErrChkList(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet responseTemp = new DataSet();
        IDataSet reqData = new DataSet();
        reqData.putFieldMap(requestData.getFieldMap());
        IRecordSet rs = requestData.getRecordSet("RQ_SEND_AMT_OBJ_EQP_LIST");
        CommonArea ca = getCommonArea(onlineCtx);
        
        try {
            // 1. DU lookup
            DEPDpstMgmt dEPDpstMgmt = (DEPDpstMgmt) lookupDataUnit(DEPDpstMgmt.class);
            // 2.
            String strMsg = "";
            for(int i = 0; i < rs.getRecordCount(); i++){
                reqData.putFieldMap(rs.getRecordMap(i));
                reqData.putField("EQP_MDL_NM", reqData.getField("PROD_NM"));
                reqData.putField("CON_PLC_NM", reqData.getField("CON_PLC_NM"));

                responseTemp = dEPDpstMgmt.dSInqSendAmtObjErrChkList(reqData, onlineCtx);
                
                strMsg = "";
                if(responseTemp == null || responseTemp.getRecordSetCount() <= 0 
                    || responseTemp.getRecordSet("EQP_ERR_CHK_LIST") == null || responseTemp.getRecordSet("EQP_ERR_CHK_LIST").getRecordCount() <= 0){
                    strMsg = "미존재단말기,미존재상담처";
                }else {
                    IRecordSet rsTemp = responseTemp.getRecordSet("EQP_ERR_CHK_LIST");
                    //모델체크
                    if(rsTemp.getRecord(0).get("EQP_MDL_NM") == null ||
                        "".equals(rsTemp.getRecord(0).get("EQP_MDL_NM").toString())){
                        strMsg = "미존재단말기";
                    }else if(!rsTemp.getRecord(0).get("EQP_MDL_NM").toString().equals(reqData.getField("EQP_MDL_NM"))){
                        strMsg = "단말기명비동일";
                    }
                    //상담처체크
                    if(rsTemp.getRecord(0).get("DEALCO_NM") == null ||
                        "".equals(rsTemp.getRecord(0).get("DEALCO_NM").toString())){
                        if(strMsg != null && !"".equals(strMsg)){
                            strMsg += ",";
                        }
                        strMsg = strMsg + "미존재상담처";
                    }else if(!rsTemp.getRecord(0).get("DEALCO_NM").toString().equals(reqData.getField("CON_PLC_NM"))){
                        if(strMsg != null && !"".equals(strMsg)){
                            strMsg += ",";
                        }
                        strMsg = strMsg + "상담처명비동일";
                    }
                    //동일단말기여부
                    if(Integer.parseInt(rsTemp.getRecord(0).getBigDecimal("REG_CNT").toString()) > 0){
                        if(strMsg != null && !"".equals(strMsg)){
                            strMsg += ",";
                        }
                        strMsg = strMsg + "기등록단말기";
                    }
                    if(strMsg != null && !"".equals(strMsg)){
                        if(reqData.getField("ERR_DESC") != null && !"".equals(reqData.getField("ERR_DESC"))){
                            strMsg = "," + strMsg;
                        }
                        rs.getRecord(i).put("ERR_DESC", strMsg);
                    }
                }
            }
            responseData.putRecordSet("RS_SEND_AMT_OBJ_EQP_LIST", rs);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
    
        return responseData;
    }

    /**
	 * <pre>[FM]입금관리송금단말기등록</pre>
	 *
	 * @author 양재석 (jsyang)
	 * @since 2015-09-15 18:48:39
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- record : RQ_SEND_AMT_OBJ_EQP_LIST
	 *		- field : EQP_MDL_CD [모델코드]
	 *		- field : PROD_NM [모델명]
	 *		- field : EQP_SER_NO [일련번호]
	 *		- field : DPSTR [고객명]
	 *		- field : CNSL_DT [상담일자]
	 *		- field : CNSL_DEALCO_CD [상담처코드]
	 *		- field : CON_PLC_NM [상담처명]
	 *		- field : ONING_DT [개통일자]
	 *		- field : EQP_ST [단말기등급]
	 *		- field : EQP_COLOR_CD [색상]
	 *		- field : LOSS_EQP_YN [분실단말기여부]
	 *		- field : RWD_RTN_OBJ_YN [보상반납대상여부]
	 *		- field : RENTP_YN [임대폰여부]
	 *		- field : USIM_EQPCHG_YN [USIM기변여부]
	 *		- field : OTHRCO_FORGN_EQP_YN [타사/해외단말기여부]
	 *		- field : SVC_NO [서비스번호]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : IMEI [IMEI]
	 *		- field : FEE_DEDC_YN [요금공제여부]
	 *		- field : SKN_JDG_AMT [매입금액]
	 *		- field : PRCH_CL [검수구분]
	 *		- field : TLY_DT [검수일자]
	 *		- field : CUST_IDEA [고객의사]
	 *		- field : CUST_CHK_DT [고객확인일자]
	 *		- field : ACC_NM [예금주]
	 *		- field : BANK_CD [은행코드]
	 *		- field : BANK_NM [은행명]
	 *		- field : ACCO_NO [계좌번호]
	 *		- field : TEL_NO [전화번호]
	 *		- field : ZIPCD_1 [우편번호1]
	 *		- field : ZIPCD_2 [우편번호2]
	 *		- field : ADDR [주소]
	 *		- field : ETC_ADDR [기타주소]
	 *		- field : SUGG [의견]
	 *		- field : T_MGMT_NO [T_관리번호]
	 *		- field : BATTERY [배터리]
	 *		- field : CHARGER [충전기]
	 *		- field : ZENDER [젠더]
	 *		- field : EARPHONES [이어폰]
	 *		- field : CASE [충전 Case]
	 *		- field : USB [USB CABLE]
	 *		- field : MEMORY [메모리카드]
	 *		- field : DTL_1 [구성품_1]
	 *		- field : DTL_2 [구성품_2]
	 *		- field : DTL_3 [구성품_3]
	 *		- field : OTHER [기타구성품]
	 *		- field : SELL_GRADE [판매등급]
	 *		- field : ERR_DESC [ERROR]
	 *		- field : SKN_CL [SKN구분]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegDpstMgmtSendAmtEqp(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet reqData = new DataSet();
        IDataSet reqDataTemp = new DataSet();
        IDataSet resDate = new DataSet();
        reqData.putFieldMap(requestData.getFieldMap());
        IRecordSet reqSet = requestData.getRecordSet("RQ_SEND_AMT_OBJ_EQP_LIST");

        try {
            // 1. DU lookup
            DEPDpstMgmt dEPDpstMgmt = (DEPDpstMgmt) lookupDataUnit(DEPDpstMgmt.class);
            DEPTlyReg dEPTlyReg = (DEPTlyReg) lookupDataUnit(DEPTlyReg.class);
            CommonArea ca = getCommonArea(onlineCtx);
            // 2. 
            for(int i = 0; i < reqSet.getRecordCount(); i++){
                reqData.putFieldMap(reqSet.getRecordMap(i));
                //3. 상담관리번호채번
                resDate = dEPDpstMgmt.dSInqCnslMgmtNo(reqData, onlineCtx);
                reqData.putField("CNSL_MGMT_NO", resDate.getField("CNSL_MGMT_NO"));
                //4. 매입관리번호채번
                resDate = dEPTlyReg.dSPrchMgmtNoSeq(reqData, onlineCtx);
                reqData.putField("PRCH_MGMT_NO", resDate.getField("PRCH_MGMT_NO"));
                //5. 상품상세조회
                resDate = dEPDpstMgmt.dSInqDspMgmtProdDtlInfoList(reqData, onlineCtx);
                IRecordSet reqSetDtl = resDate.getRecordSet("PROD_DTL_INFO_LIST");
                for(int j = 0; j < reqSetDtl.getRecordCount(); j++){
                    IDataSet reqDataDtl = new DataSet();
                    reqDataDtl.putFieldMap(reqSetDtl.getRecordMap(j));
                    //6. 최초등록사용자ID,최종변경사용자ID
                    reqDataDtl.putField("FS_REG_USER_ID", ca.getUserNo());
                    reqDataDtl.putField("LS_CHG_USER_ID", ca.getUserNo());
                    reqDataDtl.putField("CNSL_MGMT_NO", reqData.getField("CNSL_MGMT_NO"));
                    reqDataDtl.putField("PRCH_MGMT_NO", reqData.getField("PRCH_MGMT_NO"));
                    reqDataDtl.putField("DTL_CL", reqDataDtl.getField("OUTS_MCN_CL"));
                    reqDataDtl.putField("CNSL_SER_NO", reqDataDtl.getField("SEQ"));
                    reqDataDtl.putField("PRCH_SER_NO", reqDataDtl.getField("SEQ"));
                    reqDataDtl.putField("CMPT_PROD_CD", reqDataDtl.getField("BATR_CD"));
                    reqDataDtl.putField("CL_CD", "1");
                    reqDataDtl.putField("PRCH_UPRC", reqDataDtl.getField("UPRC"));
                    reqDataDtl.putField("PRCH_QTY", reqDataDtl.getField("QTY"));
                    if(reqDataDtl.getField("OUTS_MCN_CL") != null){
                        if("1".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("BATTERY") != null 
                            && Integer.parseInt(reqData.getField("BATTERY").toString()) > 0){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("2".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("BATTERY") != null 
                            && Integer.parseInt(reqData.getField("BATTERY").toString()) > 1){
                            reqDataDtl.putField("HLD_QTY", Integer.parseInt(reqData.getField("BATTERY").toString()) - 1);
                        }else if("4".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("CHARGER") != null 
                            && reqData.getField("CHARGER").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("5".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("ZENDER") != null 
                            && reqData.getField("ZENDER").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("6".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("EARPHONES") != null 
                            && reqData.getField("EARPHONES").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("7".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("CASE") != null 
                            && reqData.getField("CASE").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("8".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("USB") != null 
                            && reqData.getField("USB").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }else if("9".equals(reqDataDtl.getField("OUTS_MCN_CL").toString()) && reqData.getField("MEMORY") != null 
                            && reqData.getField("MEMORY").toString().endsWith("Y")){
                            reqDataDtl.putField("HLD_QTY", 1);
                        }
                    }
                    //7. 상담상세등록
                    dEPDpstMgmt.dIDpstMgmtConsultDtlRgst(reqDataDtl, onlineCtx);
                    //8. 매입상세등록
                    dEPDpstMgmt.dIDpstMgmtPrchsDtlRgst(reqDataDtl, onlineCtx);
                }
                //9. 최초등록사용자ID,최종변경사용자ID
                reqData.putField("FS_REG_USER_ID", ca.getUserNo());
                reqData.putField("LS_CHG_USER_ID", ca.getUserNo());
                
                if(reqData.getField("CNSL_DT") != null && !"".equals(reqData.getField("CNSL_DT").toString())){
                    reqData.putField("CNSL_DT", reqData.getField("CNSL_DT").toString().replace("-", ""));
                }
                if(reqData.getField("ONING_DT") != null && !"".equals(reqData.getField("ONING_DT").toString())){
                    reqData.putField("ONING_DT", reqData.getField("ONING_DT").toString().replace("-", ""));
                }
                if(reqData.getField("TLY_DT") != null && !"".equals(reqData.getField("TLY_DT").toString())){
                    reqData.putField("TLY_DT", reqData.getField("TLY_DT").toString().replace("-", ""));
                }
                if(reqData.getField("ACCO_NO") != null && !"".equals(reqData.getField("ACCO_NO").toString())){
                    reqData.putField("ACCO_NO_ENPT", HpcUtils.encodeByAES(reqData.getField("ACCO_NO")));
                    reqData.putField("ACCO_NO", HpcUtils.maskingAccountNo(reqData.getField("ACCO_NO")));
                }
                if(reqData.getField("TEL_NO") != null && !"".equals(reqData.getField("TEL_NO").toString())){
                    reqData.putField("TEL_NO_ENPT", HpcUtils.encodeByAES(reqData.getField("TEL_NO")));
                    reqData.putField("TEL_NO", HpcUtils.maskingTelNo(reqData.getField("TEL_NO")));
                }
                if(reqData.getField("ADDR") != null && !"".equals(reqData.getField("ADDR").toString())){
                    reqData.putField("ADDR_ENPT", HpcUtils.encodeByAES(reqData.getField("ADDR")));
                    reqData.putField("ADDR", HpcUtils.maskingAddress(reqData.getField("ADDR")));
                }
                if(reqData.getField("ETC_ADDR") != null && !"".equals(reqData.getField("ETC_ADDR").toString())){
                    reqData.putField("ETC_ADDR_ENPT", HpcUtils.encodeByAES(reqData.getField("ETC_ADDR")));
                    reqData.putField("ETC_ADDR", HpcUtils.maskingAddrDtl(reqData.getField("ETC_ADDR")));
                }
                //10. 상담관리등록
                dEPDpstMgmt.dIDpstMgmtConsultRgst(reqData, onlineCtx);
                //11. 매입관리등록
                dEPDpstMgmt.dIDpstMgmtPrchRgst(reqData, onlineCtx);
            }
        } catch ( BizRuntimeException e ) {
            throw e;
        }
    
        return responseData;
    }
  
}
