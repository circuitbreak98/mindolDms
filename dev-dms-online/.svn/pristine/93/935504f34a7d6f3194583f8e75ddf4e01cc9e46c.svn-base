package dms.nr.nrsplbase.biz;

import java.util.Map;

import org.apache.commons.lang.StringUtils;

import fwk.utils.HpcUtils;
import fwk.utils.PagenateUtils;
import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.IResultMessage;
import nexcore.framework.core.data.ResultMessage;
import nexcore.framework.core.exception.BizRuntimeException;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]단말기정책관리</li>
 * <li>설  명 : <pre>단말기정책관리FU</pre></li>
 * <li>작성일 : 2015-07-10 10:07:07</li>
 * <li>작성자 : 장미진 (kuramotojin)</li>
 * </ul>
 *
 * @author 장미진 (kuramotojin)
 */
public class FNREqpPolyMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNREqpPolyMgmt(){
		super();
	}

	/**
	 * <pre>단말기별 정책정보를 조회한다</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-10 11:29:52
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqEqpPolyLst(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet usrListRs = null;
		int intTotalCnt = 0;

		try {
			// 1. DU lookup
			DNREqpPolyMgmt dNREqpPolyMgmt = (DNREqpPolyMgmt) lookupDataUnit(DNREqpPolyMgmt.class);
			
			// 2. TOTAL COUNT DM호출
			dsCnt = dNREqpPolyMgmt.dSEqpPolyTotCnt(requestData, onlineCtx);
			intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);

			// 3. LISTDM호출
			responseData = dNREqpPolyMgmt.dSEqpPolyLstPaging(reqDs, onlineCtx);
			usrListRs = responseData.getRecordSet("RS_EQP_POLY_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(usrListRs, reqDs, intTotalCnt);
			
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}
	
	    return responseData;
	}

	/**
	 * <pre>입력된 내용으로 단말정책정보를 등록한다</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-10 11:29:52
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegEqpPoly(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	    
	    try {
	    	// 필수값 체크
			if ( StringUtils.isEmpty(requestData.getField("EQP_MDL_CD")) ) {
				throw new BizRuntimeException("DMS00002", new String[] { HpcUtils.getLangMsg("EQP_MDL_CD") }); // 필수입력항목 {0}이/가 누락되었습니다.
			} 
	    	
			// 1. DU lookup
			DNREqpPolyMgmt dNREqpPolyMgmt = (DNREqpPolyMgmt) lookupDataUnit(DNREqpPolyMgmt.class);
			
			// 2. 업무 DM호출
			IDataSet dsSeq = dNREqpPolyMgmt.dSEqpPolySeq(requestData, onlineCtx);
			requestData.putField("RENTAL_POLY_NO", dsSeq.getField("RENTAL_POLY_NO"));
			
			responseData = dNREqpPolyMgmt.dIEqpPoly(requestData, onlineCtx);
			
		} catch ( BizRuntimeException e ) {
			throw e;
		}
	    
	    return responseData;
	}

	/**
	 * <pre>입력된 내용으로 단말정책정보를 수정한다</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-10 11:29:52
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdEqpPoly(IDataSet requestData, IOnlineContext onlineCtx) {
	    IDataSet responseData = new DataSet();
	
	    try {
	    	// 필수값 체크
			if ( StringUtils.isEmpty(requestData.getField("EQP_MDL_CD")) ) {
				throw new BizRuntimeException("DMS00002", new String[] { HpcUtils.getLangMsg("EQP_MDL_CD") }); // 필수입력항목 {0}이/가 누락되었습니다.
			} 
	    	
			// 1. DU lookup
			DNREqpPolyMgmt dNREqpPolyMgmt = (DNREqpPolyMgmt) lookupDataUnit(DNREqpPolyMgmt.class);
			
			// 2. 업무 DM호출
			responseData = dNREqpPolyMgmt.dUEqpPoly(requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
	
	    return responseData;
	}
  
}
