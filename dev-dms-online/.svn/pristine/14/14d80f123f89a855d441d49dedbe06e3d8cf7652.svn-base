package dms.nr.nrscmbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecord;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.data.RecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/신규R</li>
 * <li>단위업무명: [FU]SKN여신관리</li>
 * <li>설  명 : <pre>[FU]SKN여신관리</pre></li>
 * <li>작성일 : 2015-07-23 09:12:21</li>
 * <li>작성자 : 박홍서 (uni9401)</li>
 * </ul>
 *
 * @author 박홍서 (uni9401)
 */
public class FNRLoanMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FNRLoanMgmt(){
		super();
	}

    /**
	 * <pre>SKN여신 리스트 조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-23 09:12:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : AGN_CD [대리점코드]
	 *	- field : PAY_FR_YM [기준시작년월]
	 *	- field : PAY_TO_YM [기준종료년월]
	 *	- field : PAY_YM_TS [지급차수]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_SKN_PG
	 *		- field : AGN_CD [대리점코드]
	 *		- field : PAY_YM [지급년월]
	 *		- field : PAY_YM_TS [지급년월차수]
	 *		- field : AGN_NM [대리점명]
	 *		- field : CRD_AMT [여신금액]
	 *		- field : FS_REG_USER_ID [최초등록자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 */
	public IDataSet fInqSKNLoanLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;
        
        try {
            // 1. DU lookup
            DNRLoanMgmt dNRLoanMgmt = (DNRLoanMgmt) lookupDataUnit(DNRLoanMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRLoanMgmt.dSSKNLoanTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            PagenateUtils.setPagenatedParamsToDataSet(requestData);
        
            // 3. LISTDM호출
            responseData = dNRLoanMgmt.dSSKNLoanPaging(requestData, onlineCtx);
        
            rsPagingList = responseData.getRecordSet("RS_SKN_PG");
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>SKN여신 리스트 모두 조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-23 09:12:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : AGN_CD [대리점코드]
	 *	- field : PAY_FR_YM [기준시작년월]
	 *	- field : PAY_TO_YM [기준종료년월]
	 *	- field : PAY_YM_TS [지급차수]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_SKN_LST
	 *		- field : AGN_CD [대리점코드]
	 *		- field : PAY_YM [지급년월]
	 *		- field : PAY_YM_TS [지급년월차수]
	 *		- field : AGN_NM [대리점명]
	 *		- field : CRD_AMT [여신금액]
	 *		- field : FS_REG_USER_ID [최초등록자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 */
	public IDataSet fInqAllSKNLoanLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DNRLoanMgmt dNRLoanMgmt = (DNRLoanMgmt) lookupDataUnit(DNRLoanMgmt.class);
            // 3. LISTDM호출 (RS_SKN_LST)
            responseData = dNRLoanMgmt.dSSKNLoanLst(requestData, onlineCtx);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>SKN여신 상세 리스트 조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-23 09:12:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : SALE_AGN_CD [대리점코드]
	 *	- field : CNTRT_YM_TS [지급차수]
	 *	- field : SVC_MGMT_NO [서비스관리번호]
	 *	- field : SCRBR_NM [가입자명]
	 *	- field : CNTRT_FR_DTM [계약조회시작일자]
	 *	- field : CNTRT_TO_DTM [계약조회종료일자]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_SKN_DTL_PG
	 *		- field : SALE_AGN_CD [판매대리점코드]
	 *		- field : SALE_AGN_NM [판매대리점명]
	 *		- field : SALE_AGN_SEQ [판매대리점SEQ]
	 *		- field : CNTRT_YM [기준년월]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : CNTRT_YM_TS [지급차수]
	 *		- field : SCRBR_NM [가입자명]
	 *		- field : RENTAL_SNO [랜탈일련번호]
	 *		- field : CNTRT_DT [계약일자]
	 *		- field : CNTRT_MTH [계약개월]
	 *		- field : OUT_PRC [출고가]
	 *		- field : FS_REG_USER_ID [최초등록자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 *		- field : SUM_PRC [합계금액]
	 * </pre>
	 */
	public IDataSet fInqSKNLoanDtlLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        IDataSet dsCnt = new DataSet();
        IRecordSet rsPagingList = null;
        int intTotalCnt = 0;
        String sSumOutPrc;
        
        try {
            // 1. DU lookup
            DNRLoanMgmt dNRLoanMgmt = (DNRLoanMgmt) lookupDataUnit(DNRLoanMgmt.class);
            // 2. TOTAL COUNT DM호출
            dsCnt = dNRLoanMgmt.dSSKNLoanDtlTotCnt(requestData, onlineCtx);
            intTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
            sSumOutPrc = dsCnt.getField("SUM_OUT_PRC");
            
            PagenateUtils.setPagenatedParamsToDataSet(requestData);
            // 3. LISTDM호출
            responseData = dNRLoanMgmt.dSSKNLoanDtlPaging(requestData, onlineCtx);
            rsPagingList = responseData.getRecordSet("RS_SKN_DTL_PG");
            // 4. 첫번째 ROW SUM_PRC에 SUM PRC 세팅
            if(rsPagingList.getRecordCount() > 0) {
                rsPagingList.getRecord(0).set("SUM_PRC", sSumOutPrc);
            }
            
            PagenateUtils.setPagenatedParamToRecordSet(rsPagingList, requestData, intTotalCnt);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }

    /**
	 * <pre>SKN여신 리스트 모두 조회</pre>
	 *
	 * @author 박홍서 (uni9401)
	 * @since 2015-07-23 09:12:21
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * <pre>
	 *	- field : SALE_AGN_CD [대리점코드]
	 *	- field : CNTRT_YM_TS [지급차수]
	 *	- field : SVC_MGMT_NO [서비스관리번호]
	 *	- field : SCRBR_NM [가입자명]
	 *	- field : CNTRT_FR_DTM [계약조회시작일자]
	 *	- field : CNTRT_TO_DTM [계약조회종료일자]
	 * </pre>
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 * <pre>
	 *	- record : RS_SKN_DTL_LST
	 *		- field : SALE_AGN_CD [판매대리점코드]
	 *		- field : SALE_AGN_NM [판매대리점명]
	 *		- field : CNTRT_YM [기준년월]
	 *		- field : SVC_MGMT_NO [서비스관리번호]
	 *		- field : CNTRT_YM_TS [지급차수]
	 *		- field : SCRBR_NM [가입자명]
	 *		- field : RENTAL_SNO [랜탈일련번호]
	 *		- field : CNTRT_DT [계약일자]
	 *		- field : CNTRT_MTH [계약개월]
	 *		- field : OUT_PRC [출고가]
	 *		- field : FS_REG_USER_ID [최초등록자ID]
	 *		- field : FS_REG_DTM [최초등록일시]
	 *		- field : LS_CHG_USER_ID [최종변경자ID]
	 *		- field : LS_CHG_DTM [최종변경일시]
	 * </pre>
	 */
	public IDataSet fInqAllSKNLoanDtlLst(IDataSet requestData, IOnlineContext onlineCtx) {
        IDataSet responseData = new DataSet();
        try {
            // 1. DU lookup
            DNRLoanMgmt dNRLoanMgmt = (DNRLoanMgmt) lookupDataUnit(DNRLoanMgmt.class);
            // 3. LISTDM호출 (RS_SKN_DTL_LST)
            responseData = dNRLoanMgmt.dSSKNLoanDtlLst(requestData, onlineCtx);
        } catch ( BizRuntimeException e ) {
            throw e;
        }
        return responseData;
    }
  
}
