package dms.bi.bibbase.biz;

import nexcore.framework.core.data.DataSet;
import nexcore.framework.core.data.IDataSet;
import nexcore.framework.core.data.IOnlineContext;
import nexcore.framework.core.data.IRecordSet;
import nexcore.framework.core.exception.BizRuntimeException;
import fwk.utils.PagenateUtils;


/**
 * <ul>
 * <li>업무 그룹명 : dms/기준정보</li>
 * <li>단위업무명: [FU]거래처관리</li>
 * <li>설  명 : <pre>거래처관리</pre></li>
 * <li>작성일 : 2015-07-03 08:26:12</li>
 * <li>작성자 : 이영진 (newnofixing)</li>
 * </ul>
 *
 * @author 이영진 (newnofixing)
 */
public class FBIDealCoMgmt extends fwk.base.FunctionUnit {

	/**
	 * 이 클래스는 Singleton 객체로 수행됩니다. 
	 * 여기에 필드를 선언하여 사용하면 동시성 문제를 일으킬 수 있습니다.
	 */

	/**
	 * Default Constructor
	 */
	public FBIDealCoMgmt(){
		super();
	}

	/**
	 * <pre>거래처목록조회</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:26:12
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fInqDealCoLst(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		IDataSet dsCnt = new DataSet();
		IDataSet reqDs = (IDataSet) requestData.clone();//원거래의 DataSet의 훼손을 막기 위한 Clone
		IRecordSet usrListRs = null;
		int usrTotalCnt = 0;

		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			
			// 2. TOTAL COUNT DM호출
			dsCnt = dBIDealCoMgmt.dSDealCoTotCnt(requestData, onlineCtx);
			usrTotalCnt = Integer.parseInt(dsCnt.getField("TOTAL_CNT"));
			PagenateUtils.setPagenatedParamsToDataSet(reqDs);

			// 3. LISTDM호출
			responseData = dBIDealCoMgmt.dSDealCoPaging(reqDs, onlineCtx);
			usrListRs = responseData.getRecordSet("RS_DEAL_CO_LIST");
			PagenateUtils.setPagenatedParamToRecordSet(usrListRs, reqDs, usrTotalCnt);
		} catch ( BizRuntimeException e ) {
			throw e; //시스템 오류가 발생하였습니다.
		}

		return responseData;
	}

	/**
	 * <pre>거래처입력</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:26:12
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fRegDealCo(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			// 2. 업무 DM호출
			responseData = dBIDealCoMgmt.dIDealCo(requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
		return responseData;
	}

	/**
	 * <pre>거래처수정</pre>
	 *
	 * @author 이영진 (newnofixing)
	 * @since 2015-07-03 08:26:12
	 *
	 * @param requestData 요청정보 DataSet 객체
	 * @param onlineCtx   요청 컨텍스트 정보
	 * @return 처리결과 DataSet 객체
	 */
	public IDataSet fUpdDealCo(IDataSet requestData, IOnlineContext onlineCtx) {
		IDataSet responseData = new DataSet();
		try {
			// 1. DU lookup
			DBIDealCoMgmt dBIDealCoMgmt = (DBIDealCoMgmt) lookupDataUnit(DBIDealCoMgmt.class);
			// 2. 거래처이력생성
			responseData = dBIDealCoMgmt.dIDealCoHist(requestData, onlineCtx);
			// 3. 거래처삭제
            responseData = dBIDealCoMgmt.dDDealCo(requestData, onlineCtx);
            // 3. 거래처등록
            responseData = dBIDealCoMgmt.dIDealCo(requestData, onlineCtx);
		} catch ( BizRuntimeException e ) {
			throw e;
		}
		return responseData;
	}
  
}
