<%@page contentType="text/json; charset=UTF-8" pageEncoding="UTF-8" 
%><%@page import="nexcore.framework.core.ioc.ComponentRegistry"
%><%@page import="nexcore.framework.core.Constants"
%><%@page import="nexcore.framework.core.util.BaseUtils"
%><%@page import="nexcore.framework.core.ServiceConstants"
%><%@page import="nexcore.framework.core.data.json.JacksonProcessor"
%><%@page import="nexcore.framework.core.data.IResultMessage"
%><%@page import="nexcore.framework.core.message.IMessageManager"
%><%@page import="nexcore.framework.core.message.IMessage"
%><%@page import="nexcore.framework.core.prototype.IMessageCoded"
%><%@page import="nexcore.framework.online.channel.util.WebUtils"
%><%@page import="com.fasterxml.jackson.databind.node.*"
%><%
    Throwable cause = (Throwable) request.getAttribute("javax.servlet.error.exception");
    
    if (cause == null) {
        cause = (Throwable) request.getAttribute("javax.servlet.jsp.jspException");
    }
    
    if (cause == null) {
        cause = (Throwable) request.getAttribute("nexcore.bizlogic.exception");
    }
    
    String messageId = "N/A";
    String messageName =  "N/A";
    String reason = "N/A";
    String remark = "N/A";
    String stackTrace = "N/A";
    
    IMessageManager mm = (IMessageManager) ComponentRegistry.lookup(ServiceConstants.MESSAGE);
    if (cause instanceof IMessageCoded){
        IMessageCoded imc = ((IMessageCoded)cause);
        messageId = imc.getMessageId();
        IMessage message = mm.getMessage(messageId, WebUtils.getLocale(pageContext));
        if(message != null){
	        messageName = message.getName(imc.getMessageParams());
	        reason = message.getReason();
	        remark = message.getRemark();
        }
    }
    if (cause != null) {
        if (cause instanceof javax.servlet.jsp.JspException) {
            Throwable jspCause = ((javax.servlet.jsp.JspException)cause).getRootCause();
            if (jspCause != null) {
                cause = jspCause;
            }
        }
    }
    if (cause != null){
        stackTrace = BaseUtils.getExceptionStackTrace(cause);
    }

    // print 
    ObjectNode transactionJson = new ObjectNode(JsonNodeFactory.instance);
    transactionJson.put(JacksonProcessor.ELM_TX_ID, "");
    
    ObjectNode messageJson = new ObjectNode(JsonNodeFactory.instance);
    messageJson.put(JacksonProcessor.ELM_DS_MSG_RESULT, IResultMessage.STR_FAIL);
    messageJson.put(JacksonProcessor.ELM_DS_MSG_ID, messageId == null ? "" : messageId);
    messageJson.put(JacksonProcessor.ELM_DS_MSG_NAME, messageName == null ? "" : messageName);
    
    ObjectNode dataSetJson = new ObjectNode(JsonNodeFactory.instance);
    dataSetJson.set(JacksonProcessor.ELM_DS_MSG, messageJson);
    
    ObjectNode responseJson = new ObjectNode(JsonNodeFactory.instance);
    responseJson.set(JacksonProcessor.ELM_TX, transactionJson);
    responseJson.set(JacksonProcessor.ELM_DS, dataSetJson);
    
    out.println(responseJson.toString());
%>